#!/usr/bin/python
# -- coding: utf-8 --

import sys
import os
import getopt
import mimetypes
import pyexiv2
import datetime
import getopt
import Image

class bcolors:
    HEADER = '\033[95m'
    OKBLUE = '\033[94m'
    OKGREEN = '\033[92m'
    WARNING = '\033[93m'
    FAIL = '\033[91m'
    ENDC = '\033[0m'
    BOLD = "\033[1m"

    def disable(self):
        self.HEADER = ''
        self.OKBLUE = ''
        self.OKGREEN = ''
        self.WARNING = ''
        self.FAIL = ''
        self.ENDC = ''
        self.BOLD = ''

PLACE=""
TITLE=""
ROWCOUNT=4
template='''<!doctype html>
<!--[if lt IE 7]> <html class="no-js ie6 oldie" lang="en"> <![endif]-->
<!--[if IE 7]>    <html class="no-js ie7 oldie" lang="en"> <![endif]-->
<!--[if IE 8]>    <html class="no-js ie8 oldie" lang="en"> <![endif]-->
<!--[if gt IE 8]><!--> <html class="no-js" lang="en"> <!--<![endif]-->
<head>
	<meta charset="utf-8">
	<meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">

	<title>__TITLE__</title>
	<meta name="description" content="A Damn Fine Image Library">
	<meta name="author" content="@padenot">

	<meta name="viewport" content="width=device-width,initial-scale=1">

  <style>
     article, aside, details, figcaption, figure, footer, header, hgroup, nav, section { display: block; } audio[controls], canvas, video { display: inline-block; *display: inline; *zoom: 1; } html { font-size: 100%; overflow-y: scroll; -webkit-overflow-scrolling: touch; -webkit-tap-highlight-color: rgba(0,0,0,0); -webkit-text-size-adjust: 100%; -ms-text-size-adjust: 100%; } body { margin: 0; font-size: 13px; line-height: 1.231; } body, button, input, select, textarea { font-family: sans-serif; color: #222; } ::-moz-selection { background: #fe57a1; color: #fff; text-shadow: none; } ::selection { background: #fe57a1; color: #fff; text-shadow: none; } a { color: #00e; } a:visited { color: #551a8b; } a:focus { outline: thin dotted; } a:hover, a:active { outline: 0; } abbr[title] { border-bottom: 1px dotted; } b, strong { font-weight: bold; } blockquote { margin: 1em 40px; } dfn { font-style: italic; } hr { display: block; height: 1px; border: 0; border-top: 1px solid #ccc; margin: 1em 0; padding: 0; } ins { background: #ff9; color: #000; text-decoration: none; } mark { background: #ff0; color: #000; font-style: italic; font-weight: bold; } pre, code, kbd, samp { font-family: monospace, monospace; _font-family: 'courier new', monospace; font-size: 1em; } pre { white-space: pre; white-space: pre-wrap; word-wrap: break-word; } q { quotes: none; } q:before, q:after { content: ""; content: none; } small { font-size: 85%; } sub, sup { font-size: 75%; line-height: 0; position: relative; vertical-align: baseline; } sup { top: -0.5em; } sub { bottom: -0.25em; } ul, ol { margin: 1em 0; padding: 0 0 0 40px; } dd { margin: 0 0 0 40px; } nav ul, nav ol { list-style: none; margin: 0; padding: 0; } img { border: 0; -ms-interpolation-mode: bicubic; } svg:not(:root) { overflow: hidden; } figure { margin: 0; } form { margin: 0; } fieldset { border: 0; margin: 0; padding: 0; } legend { border: 0; *margin-left: -7px; padding: 0; } label { cursor: pointer; } button, input, select, textarea { font-size: 100%; margin: 0; vertical-align: baseline; *vertical-align: middle; } button, input { line-height: normal; *overflow: visible; } button, input[type="button"], input[type="reset"], input[type="submit"] { cursor: pointer; -webkit-appearance: button; } input[type="checkbox"], input[type="radio"] { box-sizing: border-box; } input[type="search"] { -moz-box-sizing: content-box; -webkit-box-sizing: content-box; box-sizing: content-box; } button::-moz-focus-inner, input::-moz-focus-inner { border: 0; padding: 0; } textarea { overflow: auto; vertical-align: top; } input:valid, textarea:valid { } input:invalid, textarea:invalid { background-color: #f0dddd; } table { border-collapse: collapse; border-spacing: 0; } body { margin: auto; font-family: "Palatino", Serif; background-image: -webkit-gradient( linear, left bottom, left top, color-stop(0, rgb(179,179,179)), color-stop(0.59, rgb(255,255,255)) ); background: -moz-linear-gradient( center bottom, rgb(179,179,179) 0%, rgb(255,255,255) 100% ); background-color: rgb(179, 179, 179); background-repeat: no-repeat; -webkit-background-size: cover; -moz-background-size: cover; -o-background-size: cover; background-size: cover; } a { border-bottom: 1px rgb(50,50,50) dotted; color: rgb(50,50,50); text-decoration: none; } a:hover { color: rgb(75,75,75); } a:visited { color: rgb(100,100,100); } body > .wrapper { display: table; padding-left: 2em; padding-right : 2em; } hgroup { margin-left: 1em; } hgroup > h1 { font-size: 4em; text-shadow: 4px 4px 4px gray; margin : 0.2em; } hgroup > p { font-size: 1.5em; text-shadow: 4px 4px 4px gray; margin-left : 2em; } .rotated { -moz-transform: rotate(90deg); -moz-transform-origin: left top; -webkit-transform: rotate(90deg); -webkit-transform-origin: left top; -o-transform: rotate(90deg); -o-transform-origin: left top; font-variant: small-caps; font-weight: 700; left: 99%; top: 10%; opacity: 0.3; position: absolute; font-size: 13em; z-index: -1; } .wrapper > .row { display: table-row; } .row > .cell { display: table-cell; padding: 1em 1em; text-align: center; } .cell > .caption { } .cell > img { cursor: pointer; box-shadow: 4px 4px 4px black; } .cell[zoomed=true] { -moz-transition: -moz-transform 1s ease-in-out; -moz-transform: scale(3); -webkit-transition: -webkit-transform 1s ease-in-out; -webkit-transform: scale(3); -o-transition: -o-transform 1s ease-in-out; -o-transform: scale(3); } .cell[hires=true] { -moz-transition: -moz-transform 0s ease-in-out; -moz-transform: scale(1); -webkit-transition: -webkit-transform 0s ease-in-out; -webkit-transform: scale(1); -o-transition: -o-transform 0s ease-in-out; -o-transform: scale(1); position: absolute; top: 10%; left: 10%; } .back { -moz-transition-duration: 1s, 1s; -moz-transition-property: opacity; -webkit-transition-duration: 1s, 1s; -webkit-transition-property: opacity; -o-transition-duration: 1s, 1s; -o-transition-property: opacity; background: black; background-color:#404040; background-image: -moz-radial-gradient(50% 50%, circle farthest-side, #222222, #000000 100%); background-image: -webkit-radial-gradient(50% 50%, circle farthest-side, #222222, #000000 100%); background-image: -o-radial-gradient(50% 50%, circle farthest-side, #222222, #000000 100%); background-image: -ms-radial-gradient(50% 50%, circle farthest-side, #222222, #000000 100%); background-image: radial-gradient(50% 50%, circle farthest-side, #222222, #000000 100%); left: 0px; opacity: 0.9; position: fixed; top: 0px; transition-duration: 1s, 1s; transition-property: opacity; z-index: 2; width: 100%; height: 100%; } .back[hide=true] { opacity: 0; z-index: -2; } .diaporama { position: fixed; top: 5%; left: 5%; height: 90%; width: 90%; max-height: 80%; margin-left: auto; margin-right: auto; z-index: 3; display: table; -moz-transition-duration: 0.5s, 0.5s; -moz-transition-property: opacity scale; -webkit-transition-duration: 0.5s, 0.5s; -webkit-transition-property: opacity scale; -o-transition-duration: 0.5s, 0.5s; -o-transition-property: opacity scale; transition-duration: 0.5s, 0.5s; transition-property: opacity, scale; -moz-transform: scale(1); -webkit-transform: scale(1); -o-transform: scale(1); } .diaporama[hide=true] { opacity: 0; z-index: -1; -moz-transform: scale(0.1); -webkit-transform: scale(0.1); -o-transform: scale(0.1); } .diaporama > .wrapper { display: table-cell; vertical-align: middle; width: 100%; } .diaporama > .wrapper > img{ cursor: pointer; display: block; margin-left: auto; margin-right: auto; } .diaporama > .wrapper > p { color: white; text-align: center; } .ctrlWrap { display: block; margin-left: auto; margin-right: auto; text-align:center; } .ctrlWrap > .ctrl { color: white; cursor: pointer; font-size: 2.5em; -webkit-user-select: none; -khtml-user-select: none; -moz-user-select: none; -o-user-select: none; user-select: none; } footer { margin-bottom: 1em; margin-left : 2em; font-size: 1em; } .ir { display: block; text-indent: -999em; overflow: hidden; background-repeat: no-repeat; text-align: left; direction: ltr; } .ir br { display: none; } .hidden { display: none; visibility: hidden; } .visuallyhidden { border: 0; clip: rect(0 0 0 0); height: 1px; margin: -1px; overflow: hidden; padding: 0; position: absolute; width: 1px; } .visuallyhidden.focusable:active, .visuallyhidden.focusable:focus { clip: auto; height: auto; margin: 0; overflow: visible; position: static; width: auto; } .invisible { visibility: hidden; } .clearfix:before, .clearfix:after { content: ""; display: table; } .clearfix:after { clear: both; } .clearfix { zoom: 1; } @media only screen and (min-width: 480px) { } @media only screen and (min-width: 768px) { } @media print { * { background: transparent !important; color: black !important; text-shadow: none !important; filter:none !important; -ms-filter: none !important; } a, a:visited { color: #444 !important; text-decoration: underline; } a[href]:after { content: " (" attr(href) ")"; } abbr[title]:after { content: " (" attr(title) ")"; } .ir a:after, a[href^="javascript:"]:after, a[href^="#"]:after { content: ""; } pre, blockquote { border: 1px solid #999; page-break-inside: avoid; } thead { display: table-header-group; } tr, img { page-break-inside: avoid; } img { max-width: 100% !important; } @page { margin: 0.5cm; } p, h2, h3 { orphans: 3; widows: 3; } h2, h3{ page-break-after: avoid; } }

  </style>

</head>
<body onload="init()">

<a name="top" id="top"></a>


<header>
  <hgroup>
    <h1>__TITLE__</h1>
    <p>__DATE__ __PLACE__</p>
  </hgroup>
</header>
<span class="rotated"></span>

<div class="wrapper">
  __GALLERY__
</div>


<footer>
<p>Made with ten fingers, vim, Firefox &amp; ♥ &mdash;
  <a href="#top">top</a>
  <a href="https://github.com/padenot/yadfig">src</a>
  <a href="http://blog.paul.cx">blog</a>
</p>
</footer>

<div class="back" hide="true"></div>
<div class="diaporama" hide="true">
  <div class="wrapper">
  <div class="ctrlWrap">
    <span id="prev" class="ctrl">←</span>
    <span id="close" class="ctrl">&otimes;</span>
    <span id="next" class="ctrl">→</span>
  </div>
  </div>
</div>

<script>
"use strict";function $(e){return document.querySelector(e);}
function $$(e){return document.querySelectorAll(e);}
function indexOf(array,element){var i=array.length;while(i--){if(array[i]===element){return i;}}
return-1;}
function getOffset(el){var _x=0;var _y=0;while(el&&!isNaN(el.offsetLeft)&&!isNaN(el.offsetTop)){_x+=el.offsetLeft-el.scrollLeft;_y+=el.offsetTop-el.scrollTop;el=el.offsetParent;}
return{top:_y,left:_x};}
var debug=true;var zoomed=null;var mode="gallery";var images=[];var currentImage=-1;function log(msg){if(debug){console.log(msg);}}
function onClickImage(e){e.stopPropagation();var image=e.target.parentNode;if(!image.getAttribute("zoomed")){diaporamaIn(image);}else{diaporamaOut();}}
function init(){var title=$("hgroup h1").innerHTML;var rotated=$(".rotated")
var body=$("html")
rotated.innerHTML=title;images=$$('.thumb');for(var i=0;i<images.length;i++){images[i].addEventListener("click",onClickImage,false);}
document.onkeydown=function(e){dispatch(e);}
$("#close").addEventListener("click",function(){diaporamaOut();},false);$("#prev").addEventListener("click",prev,false);$("#next").addEventListener("click",next,false);}
function next(e){if(mode=="diaporama"){currentImage=(currentImage+1)%images.length;var img=$('.diaporama img');img.style.opacity=0;img.src=getHiResUrl(images[currentImage].src);checkImageSize();}}
function prev(e){if(mode=="diaporama"){currentImage=currentImage==0?images.length-1:currentImage-1;var img=$('.diaporama img');img.style.opacity=0;img.src=getHiResUrl(images[currentImage].src);checkImageSize();}}
function diaporamaIn(initialCell){mode="diaporama";backgroundIn();currentImage=indexOf(images,initialCell.querySelector('img, video'));var d=$('.diaporama');var wrap=d.querySelector(".wrapper");var ctrl=wrap.querySelector(".ctrlWrap");d.removeAttribute("hide");var image=document.createElement("img");image.src=getHiResUrl(initialCell.querySelector('img').src);image.addEventListener("click",clickDiaporama,false);wrap.insertBefore(image,ctrl);var caption=document.createElement("p");caption.innerHTML=initialCell.querySelector("p").innerHTML;wrap.insertBefore(caption,ctrl);checkImageSize();}
function clickDiaporama(e){if(e.clientX<getOffset(e.target).left+e.target.offsetWidth/2){prev(e);}else{next(e);}}
function checkImageSize(){var wrapper=$('.diaporama .wrapper');var i=wrapper.querySelector("img");i.style.height="";i.style.width="";i.addEventListener("load",function(){var height=i.naturalHeight;var width=i.naturalWidth;if(height>window.innerHeight*0.8||width>window.innerWidth*0.8){if(width/window.innerWidth*0.8>height/window.innerHeight*0.8){i.style.width=window.innerWidth*0.8+"px";}else{i.style.height=window.innerHeight*0.8+"px";}}
i.style.opacity=1;},false);}
function diaporamaOut(){var d=$('.diaporama .wrapper');d.removeChild(d.querySelector("p"));d.removeChild(d.querySelector("img"));$('.diaporama').setAttribute("hide","true");mode="gallery";backgroundOut();}
function backgroundIn(){var back=$('.back');back.removeAttribute("hide");}
function backgroundOut(){$(".wrapper").style.filter="";var back=$(".back");back.setAttribute("hide","true");}
function dispatch(e){switch(e.keyCode){case 27:if(mode=="diaporama"){diaporamaOut();}
break;case 32:break;case 74:case 39:next(e);break;case 75:case 37:prev(e);break;case 191:break;default:log(e.keyCode);}}
function getHiResUrl(thumbUrl){var regexp=new RegExp("^(.*)\.c/(.*)$");var matches=regexp.exec(thumbUrl);if(matches.length==3){return matches[1]+matches[2];}
return"";}
</script>

<!--[if lt IE 7 ]>
	<script src="//ajax.googleapis.com/ajax/libs/chrome-frame/1.0.2/CFInstall.min.js"></script>
	<script>window.attachEvent("onload",function(){CFInstall.check({mode:"overlay"})})</script>
<![endif]-->

</body>
</html>


'''
THUMB_DIR=".c"
DIR=os.curdir

images = list()

def is_image(mime):
  if mime.find("image") == 0:
    return True
  return False

def list_files():
    try:
        os.stat(DIR)
        full = os.path.join(DIR, THUMB_DIR)
        if not os.path.exists(full):
            os.makedirs(full)
    except os.error, err:
        print bcolors.FAIL + str(err) + bcolors.ENDC
        exit(1)

    filenames = os.listdir(DIR)

    for name in filenames:
        full_name = os.path.join(DIR, name)
        print name
        if is_image(str(mimetypes.guess_type(full_name)[0])):
            metadata = pyexiv2.ImageMetadata(full_name)
            metadata.read()
            images.append([name, metadata])
    if len(images) == 0:
        print bcolors.WARNING + "No pictures found in "+DIR+", exiting." + bcolors.ENDC
        exit(1)


def get_pictures():
  i = 0
  out = ""
  out+='<div class="row">'
  for image in images:
    if i % ROWCOUNT == 0:
      out+='</div>'
      out+='<div class="row">'
    out+='<div class="cell"><img class="thumb" src=".c/'
    out+=image[0]
    out+='"><p>'
    out+=os.path.basename(image[0])
    out+='</p></div>'
    i=i+1
  out+="</div>"
  return out

def get_date_interval():
    dates = list()
    for i in images:
      try:
        dates.append(i[1]['Exif.Image.DateTime'].value)
      except KeyError:
        continue
    if len(dates) == 0:
      print bcolors.WARNING + "No dates found in EXIF metadata. Disabling date output" + bcolors.ENDC
      return "";

    dates.sort()
    formatdate = "%d %B %Y"
    formattime = "%H:%M"
    formatfull = formatdate + " at " + formattime
    date1 = dates[0].strftime(formatdate)
    date2 = dates[1].strftime(formatdate)
    if date1 == date2:
      return "The " + dates[0].strftime(formatdate) + ", from " + dates[0].strftime(formattime) + " to " + dates[-1].strftime(formattime)
    else:
      return "From the " + dates[0].strftime(formatfull) + " to the " + dates[-1].strftime(formatfull)

def output_html():
    global template
    template = template.replace('__TITLE__', TITLE)
    template = template.replace('__PLACE__', PLACE)
    if not PLACE:
      template = template.replace('__DATE__', get_date_interval())
    else:
      template = template.replace('__DATE__', get_date_interval()+',')
    pics = get_pictures()
    template = template.replace('__GALLERY__', pics);
    f = open(os.path.join(DIR, "index.html"), "w")
    f.write(template)
    f.close()

def create_thumbs():
    for i in images:
        im = Image.open(os.path.join(DIR, i[0]))
        im.thumbnail([im.size[0]/4, im.size[0]/4], Image.ANTIALIAS)
        thumb = os.path.join(DIR, THUMB_DIR, os.path.basename(i[0]))
        im.save(thumb)


def usage():
    print "Usage:  %s [-p|--place] name [-t|--title] title" % os.path.basename(sys.argv[0])
    print "\n\tCreate a photo gallery in index.html and a thumbnail directory,"+THUMB_DIR+"/.\n"
    print "\t-p : name of the place the photo have been taken."
    print "\t-t : a title for the page."
    print "\t-d : a directory to operate on."

def main():
    global TITLE, PLACE, DIR
    try:
        arg, opts = getopt.getopt(sys.argv[1:], "hp:t:d:")
    except getopt.GetoptError, err:
        print bcolors.WARNING + str(err) + bcolors.ENDC
        usage()
        sys.exit(2)

    for o, a in arg:
        if o in "-p":
            PLACE=a
        elif o in "-h":
            usage
            sys.exit
        elif o in "-t":
            TITLE=a
        elif o in "-d":
            DIR=a
        else:
            assert False, "unhandled option"
    list_files()
    images.sort()
    create_thumbs()
    output_html()
    print bcolors.OKGREEN + "Generation successful:"
    print "\t" + os.path.join(DIR,"index.html")
    print "\t" + os.path.join(DIR,THUMB_DIR)+ " for " + str(len(images)) + " pictures." + bcolors.ENDC

if __name__ == "__main__":
    main()


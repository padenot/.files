#compdef mach
_mach_complete()
{
    local com coms comsubs cur optkey opts state sub subs
    cur=${words[${#words[@]}]}
    typeset -A comsubs
    comsubs=( [android]=" api-lint archive-geckoview assemble-app build-geckoview_example checkstyle geckoview-docs generate-generated-jni-wrappers generate-sdk-bindings gradle-dependencies install-geckoview_example lint test " [artifact]=" clear-cache install toolchain " [busted]=" file " [cargo]=" check " [doc]=" mach-telemetry " [file-info]=" bugzilla-automation bugzilla-component missing-bugzilla schedules " [hazards]=" analyze bootstrap build-shell compile gather " [logspam]=" bisect file report " [mach-completion]=" bash fish zsh " [release]=" buglist push-scriptworker-canary send-buglist-email " [remote]=" vendor-puppeteer " [repackage]=" dmg installer mar msi " [static-analysis]=" autotest check check-coverity check-java check-syntax clear-cache install print-checks " [taskgraph]=" action-callback actions cron decision full morphed optimized target target-graph tasks test-action-callback " [test-info]=" long-tasks report report-diff tests " [try]=" again auto chooser coverage empty fuzzy release scriptworker syntax " [vendor]=" python rust " )

    # lookup for command and subcommand
    for word in ${words[@]:1}; do
        if [[ $word == -* ]]; then
            continue
        fi

        if [[ -z $com ]]; then
            com=$word
        elif [[ ${comsubs[$com]} == *" $word "* ]]; then
            sub=$word
            break
        fi
    done

    # check for a subcommand
    if [[ $cur == $com ]]; then
        state="command"
        coms=("addtest:Generate tests based on templates" "android-emulator:Run the Android emulator with an AVD from test automation. Environment variable MOZ_EMULATOR_COMMAND_ARGS, if present, will over-ride the command line arguments used to launch the emulator." "android:Run Android-specific commands." "artifact:Use pre-built artifacts to build Firefox." "awsy-test:Run Are We Slim Yet \(AWSY\) memory usage testing using marionette." "bootstrap:Install required system packages for building." "browsertime:Run \[browsertime\]\(https://github.com/sitespeedio/browsertime\) performance tests." "build-backend:Generate a backend used to build the tree." "build:Build the tree." "buildsymbols:Produce a package of Breakpad-format symbols." "busted:Query known bugs in our tooling, and file new ones." "cargo:Invoke cargo in useful ways." "check-spidermonkey:Run SpiderMonkey tests \(JavaScript engine\)." "clang-format:Run clang-format on current changes" "clobber:Clobber the tree \(delete the object directory\)." "compare-locales:Run source checks on a localization." "compileflags:Display the compilation flags for a given source file" "configure:Configure the tree \(run configure and config.status\)." "cppunittest:Run cpp unit tests \(C++ tests\)." "cramtest:Mercurial style .t tests for command line applications." "crashtest:Run crashtests \(Check if crashes on a page\)." "create-mach-environment:Create the \`mach\` virtualenvs. If executed with python3 \(the default when entering from \`mach\`\), create both a python3 and python2.7 virtualenv. If executed with python2, only create the python2.7 virtualenv." "devtools-css-db:Rebuild the devtool\'s static css properties database." "doc:Generate and serve documentation from the tree." "doctor" "environment:Show info about the mach and build environment." "eslint:Run eslint or help configure eslint for optimal development." "fetch-condprofile" "file-info:Query for metadata about files." "firefox-ui-functional:Run the functional test suite of Firefox UI tests." "fluent-migration-test:Test Fluent migration recipes." "geckodriver-test:Run geckodriver unit tests." "geckodriver:Run the WebDriver implementation for Gecko." "geckoview-junit:Run remote geckoview junit tests." "gradle-install" "gradle:Run gradle." "gtest:Run GTest unit tests \(C++ tests\)." "hazards:Commands for running the static analysis for GC rooting hazards" "ide:Generate a project and launch an IDE." "import-pr:Import a pull request from Github to the local repo." "install-moz-phab:Install patch submission tool." "install:Install the package on the machine \(or device in the case of Android\)." "jit-test:Run SpiderMonkey jit-tests in the JS shell." "jsapi-tests:Run SpiderMonkey JSAPI tests." "jsshell-bench:Run benchmarks in the SpiderMonkey JS shell." "jstestbrowser:Run js/src/tests in the browser." "jstests:Run SpiderMonkey JS tests in the JS shell." "lint:Run linters." "logspam:Warning categorizer for treeherder test runs." "mach-commands:List all mach commands." "mach-completion:Prints a list of completion strings for the specified command." "mach-debug-commands:Show info about available mach commands." "marionette-test:Remote control protocol to Gecko, used for browser automation." "mochitest:Run any flavor of mochitest \(integration test\)." "mozbuild-reference:View reference documentation on mozbuild files." "mozharness:Run tests using mozharness." "mozregression:Regression range finder for nightly and inbound builds." "node:Run the NodeJS interpreter used for building." "npm:Run the npm executable from the NodeJS used for building." "package-multi-locale:Package a multi-locale version of the built product for distribution as an APK, DMG, etc." "package:Package the built product for distribution as an APK, DMG, etc." "pastebin:\
Command line interface to paste.mozilla.org.\
\
Takes either a filename whose content should be pasted, or reads\
content from standard input. If a highlighter is specified it will\
be used, otherwise the file name will be used to determine an\
appropriate highlighter.\
" "perftest-test:Run perftest tests" "perftest:Run any flavor of perftest" "power:Get system power consumption and related measurements for all running browsers. Available only on Mac OS X 10.10 and above. Requires root access." "prettier-format:Run prettier on current changes" "puppeteer-test:Run Puppeteer unit tests." "python-test:Run Python unit tests with pytest." "python:Run Python." "raptor-test:Run Raptor performance tests." "raptor:Run Raptor performance tests." "reftest:Run reftests \(layout and graphics correctness\)." "release-history:Query balrog for release history used by enable partials generation" "release:Task that are part of the release process." "remote:Remote protocol related operations." "repackage:Repackage artifacts into different formats." "resource-usage:Show information about system resource usage for a build." "run-condprofile" "run:Run the compiled program, possibly under a debugger or DMD." "rusttests:Run rust unit tests \(via cargo test\)." "settings:Show available config settings." "show-log:Display mach logs" "static-analysis:Run C++ static analysis checks" "talos-test:Run talos tests \(performance testing\)." "taskcluster-build-image:Build a Docker image" "taskcluster-load-image:Load a pre-built Docker image. Note that you need to have docker installed and running for this to work." "taskgraph:Manipulate TaskCluster task graphs defined in-tree" "telemetry-tests-client:Run tests specifically for the Telemetry client" "test-info:Display historical test results." "test:Run tests \(detects the kind of test and runs it\)." "tps-build:Build TPS add-on." "try:Push selected tasks to the try server" "valgrind-test:Run the Valgrind test job \(memory-related errors\)." "vcs-setup:Help configure a VCS for optimal development." "vendor:Vendor third-party dependencies into the source repository." "visualmetrics:Run visualmetrics.py" "warnings-list:Show a list of compiler warnings." "warnings-summary:Show a summary of compiler warnings." "watch:Watch and re-build the tree." "web-platform-tests-update:Update web-platform-test metadata." "web-platform-tests:Run web-platform-tests." "webidl-example:Generate example files for a WebIDL interface." "webidl-parser-test:Run WebIDL tests \(Interface Browser parser\)." "wpt-manifest-update:Update web-platform-test manifests." "wpt-metadata-merge" "wpt-metadata-summary:Create a json summary of the wpt metadata" "wpt-serve:Run the wpt server" "wpt-test-paths:Get a mapping from test ids to files" "wpt-unittest:Run the wpt tools and wptrunner unit tests" "wpt-update:Update web-platform-test metadata." "wpt:Run web-platform-tests." "xpcshell-test:Run XPCOM Shell tests \(API direct unit testing\)")
    elif [[ ${cur} == -* ]]; then
        state="option"
        if [[ -z $com ]]; then
            # no command, use global options
            opts=("--debug-command:Start a Python debugger when command is dispatched." "--help:Show this help message." "--log-file:Filename to write log data to." "--log-interval:Prefix log line with interval from last message rather than relative time. Note that this is NOT execution time if there are parallel operations." "--log-no-times:Do not prefix log lines with times. By default, mach will prefix each output line with the time since command start." "--settings:Path to settings file." "--verbose:Print verbose output." "-h:Show this help message." "-l:Filename to write log data to." "-v:Print verbose output.")
        fi
    fi
    case $state in
        (command)
            _describe 'command' coms
        ;;
        (option)
            if [[ -n $sub ]]; then
                optkey="$com $sub"
            else
                optkey="$com"
            fi
            case $optkey in
            (addtest)
            opts+=("-h:show this help message and exit" "--help:show this help message and exit" "--suite:suite for the test. If you pass a \`test\` argument this will be determined based on the filename and the folder it is in" "-o:Overwrite an existing file if it exists." "--overwrite:Overwrite an existing file if it exists." "--doc:Document type for the test \(if applicable\).If you pass a \`test\` argument this will be determined based on the filename." "-e:Open the created file\(s\) in an editor\; if a binary is supplied it will be used otherwise the default editor for your environment will be opened" "--editor:Open the created file\(s\) in an editor\; if a binary is supplied it will be used otherwise the default editor for your environment will be opened" "--long-timeout:Test should be given a long timeout \(typically 60s rather than 10s, but varies depending on environment\)" "-m:Path to the reference file" "--reference:Path to the reference file" "--mismatch:Create a mismatch reftest" "--wait:Create a reftest that waits until takeScreenshot\(\) is called")
            ;;

            (android geckoview-docs)
            opts+=("--archive:Generate a javadoc archive." "--upload:Upload geckoview documentation to Github, using the specified USER/REPO." "--upload-branch:Use the specified branch/path for documentation commits." "--javadoc-path:Use the specified path for javadoc commits." "--upload-message:Use the specified message for commits.")
            ;;

            (android-emulator)
            opts+=("--version:Specify which AVD to run in emulator. One of \\\"arm-4.3\\\" \(Android 4.3 supporting armv7 binaries\), or \\\"x86-7.0\\\" \(Android 7.0 supporting x86 or x86_64 binaries, recommended for most applications\). By default, \\\"arm-4.3\\\" will be used if the current build environment architecture is arm\; otherwise \\\"x86-7.0\\\"." "--wait:Wait for emulator to be closed." "--force-update:Update AVD definition even when AVD is already installed." "--gpu:Over-ride the emulator -gpu argument." "--verbose:Log informative status messages.")
            ;;

            (artifact clear-cache)
            opts+=("--verbose:Print verbose output." "-v:Print verbose output." "--job:Build job." "--tree:Firefox tree.")
            ;;

            (artifact install)
            opts+=("--verbose:Print verbose output." "-v:Print verbose output." "--job:Build job." "--tree:Firefox tree." "--skip-cache:Skip all local caches to force re-fetching remote artifacts." "--no-tests:Don\'t install tests." "--symbols:Download symbols." "--host-bins:Download host binaries." "--distdir:Where to install artifacts to." "--no-process:Don\'t process \(unpack\) artifact packages, just download them." "--maven-zip:Download Maven zip \(Android-only\).")
            ;;

            (artifact toolchain)
            opts+=("--verbose:Print verbose output." "-v:Print verbose output." "--cache-dir:Directory where to store the artifacts cache" "--skip-cache:Skip all local caches to force re-fetching remote artifacts." "--from-build:Download toolchains resulting from the given build\(s\)\; BUILD is a name of a toolchain task, e.g. linux64-clang" "--tooltool-manifest:Explicit tooltool manifest to process" "--authentication-file:Use the RelengAPI token found in the given file to authenticate" "--no-unpack:Do not unpack any downloaded file" "--retry:Number of times to retry failed downloads" "--bootstrap:Whether this is being called from bootstrap. This verifies the toolchain is annotated as a toolchain used for local development." "--artifact-manifest:Store a manifest about the downloaded taskcluster artifacts")
            ;;

            (awsy-test)
            opts+=("--web-root:Path to web server root directory. If not specified, defaults to topobjdir/_tests/awsy/html." "--page-manifest:Path to page manifest text file containing a list of urls to test. The urls must be served from localhost. If not specified, defaults to page_load_test/tp5n/tp5n.manifest under the web root." "--results:Path to results directory. If not specified, defaults to the parent directory of the web root." "--quick:Set --entities=3, --iterations=1, --per-tab-pause=1, --settle-wait-time=1 for a quick test. Overrides any explicit argument settings." "--entities:Number of urls to load. Defaults to the total number of urls." "--max-tabs:Maximum number of tabs to open. Defaults to 30." "--iterations:Number of times to run through the test suite. Defaults to 5." "--per-tab-pause:Seconds to wait in between opening tabs. Defaults to 10." "--settle-wait-time:Seconds to wait for things to settled down. Defaults to 30." "--dmd:Enable DMD during testing. Requires a DMD-enabled build." "--tp6:Use the tp6 pageset during testing." "-h:show this help message and exit" "--help:show this help message and exit" "--binary:path to gecko executable to launch before running the test" "--address:host:port of running Gecko instance to connect to" "--emulator:If no --address is given, then the harness will launch an emulator. \(See Remote options group.\) If --address is given, then the harness assumes you are running an emulator already, and will launch gecko app on that emulator." "--app:application to use. see marionette_driver.geckoinstance" "--app-arg:specify a command line argument to be passed onto the application" "--profile:profile to use when launching the gecko process. If not passed, then a profile will be constructed and used" "--setpref:set a browser preference\; repeat for multiple preferences." "--preferences:read preferences from a JSON or INI file. For INI, use \'file.ini:section\' to specify a particular section." "--addon:addon to install\; repeat for multiple addons." "--repeat:number of times to repeat the test\(s\)" "--run-until-failure:Run tests repeatedly and stop on the first time a test fails. Default cap is 30 runs, which can be overwritten with the --repeat parameter." "--testvars:path to a json file with any test data required" "--symbols-path:absolute path to directory containing breakpad symbols, or the url of a zip file containing symbols" "--socket-timeout:Set the global timeout for marionette socket operations. Default: %\(default\)ss." "--startup-timeout:the max number of seconds to wait for a Marionette connection after launching a binary. Default: %\(default\)ss." "--shuffle:run tests in a random order" "--shuffle-seed:Use given seed to shuffle tests" "--total-chunks:how many chunks to split the tests up into" "--this-chunk:which chunk to run" "--server-root:url to a webserver or path to a document root from which content resources are served \(default: /home/padenot/src/trees/mozilla-unified/testing/marionette/harness/marionette_harness/www\)." "--gecko-log:Define the path to store log file. If the path is a directory, the real log file will be created given the format gecko-\(timestamp\).log. If it is a file, if will be used directly. \'-\' may be passed to write to stdout. Default: \'./gecko.log\'" "--logger-name:Define the name to associate with the logger used" "--jsdebugger:Enable the jsdebugger for marionette javascript." "--pydebugger:Enable python post-mortem debugger when a test fails. Pass in the debugger you want to use, eg pdb or ipdb." "--enable-fission:Enable Fission \(site isolation\) in Gecko." "--enable-webrender:Enable the WebRender compositor in Gecko." "-z:Run tests in headless mode." "--headless:Run tests in headless mode." "--tag:Filter out tests that don\'t have the given tag. Can be used multiple times in which case the test must contain at least one of the given tags." "--workspace:Path to directory for Marionette output. \(Default: .\) \(Default profile dest: TMP\)" "-v:Increase verbosity to include debug messages with -v, and trace messages with -vv." "--verbose:Increase verbosity to include debug messages with -v, and trace messages with -vv." "--emulator-binary:Path to emulator binary. By default mozrunner uses \`which emulator\`" "--adb:Path to the adb. By default mozrunner uses \`which adb\`" "--avd:Name of an AVD available in your environment.See mozrunner.FennecEmulatorRunner" "--avd-home:Path to avd parent directory" "--device:Serial ID to connect to as seen in \`adb devices\`,e.g emulator-5444" "--package:Name of Android package, e.g. org.mozilla.fennec" "--log-raw:Raw structured log messages \(provided by mozlog\)" "--log-unittest:Unittest style output \(provided by mozlog\)" "--log-xunit:xUnit compatible XML \(povided by mozlog\)" "--log-html:HTML report \(provided by mozlog\)" "--log-mach:Human-readable output \(provided by mozlog\)" "--log-tbpl:TBPL style log format \(provided by mozlog\)" "--log-grouped:Grouped summary of test results \(provided by mozlog\)" "--log-raw-level:A least log level to subscribe to for the given formatter \(debug, info, error, etc.\)" "--log-mach-verbose:Enables verbose mode for the given formatter." "--log-mach-level:A least log level to subscribe to for the given formatter \(debug, info, error, etc.\)" "--log-mach-buffer:If specified, enables message buffering at the given buffer size limit." "--log-mach-screenshot:Enable logging reftest-analyzer compatible screenshot data." "--log-mach-no-screenshot:Disable logging reftest-analyzer compatible screenshot data." "--log-tbpl-compact:Enables compact mode for the given formatter." "--log-tbpl-level:A least log level to subscribe to for the given formatter \(debug, info, error, etc.\)" "--log-tbpl-buffer:If specified, enables message buffering at the given buffer size limit.")
            ;;

            (bootstrap)
            opts+=("--application-choice:Pass in an application choice instead of using the default interactive prompt." "--no-interactive:Answer yes to any \(Y/n\) interactive prompts." "--no-system-changes:Only execute actions that leave the system configuration alone.")
            ;;

            (browsertime)
            opts+=("--verbose:Verbose output for what commands the build is running." "--update-upstream-url" "--setup" "--clobber" "--skip-cache:Skip all local caches to force re-fetching remote artifacts." "--check" "--browsertime-help:Show the browsertime help message.")
            ;;

            (build)
            opts+=("--jobs:Number of concurrent jobs to run. Default is the number of CPUs." "-j:Number of concurrent jobs to run. Default is the number of CPUs." "-C:Change to a subdirectory of the build directory first." "--directory:Change to a subdirectory of the build directory first." "-v:Verbose output for what commands the build is running." "--verbose:Verbose output for what commands the build is running." "--keep-going:Keep building after an error has occurred")
            ;;

            (build-backend)
            opts+=("-d:Show a diff of changes." "--diff:Show a diff of changes." "-b:Which backend to build." "--backend:Which backend to build." "-v:Verbose output." "--verbose:Verbose output." "-n:Do everything except writing files out." "--dry-run:Do everything except writing files out.")
            ;;

            (cargo check)
            opts+=("--all-crates:Check all of the crates in the tree." "--jobs:Run the tests in parallel using multiple processes." "-j:Run the tests in parallel using multiple processes." "-v:Verbose output." "--verbose:Verbose output.")
            ;;

            (check-spidermonkey)
            opts+=("--valgrind:Run jit-test suite with valgrind flag")
            ;;

            (clang-format)
            opts+=("--show:Show diff output on stdout instead of applying changes" "-s:Show diff output on stdout instead of applying changes" "--assume-filename:This option is usually used in the context of hg-formatsource.When reading from stdin, clang-format assumes this filename to look for a style config file \(with -style=file\) and to determine the language. When specifying this option only one file should be used as an input and the output will be forwarded to stdin. This option also impairs the download of the clang-tools and assumes the package is already located in it\'s default location" "-a:This option is usually used in the context of hg-formatsource.When reading from stdin, clang-format assumes this filename to look for a style config file \(with -style=file\) and to determine the language. When specifying this option only one file should be used as an input and the output will be forwarded to stdin. This option also impairs the download of the clang-tools and assumes the package is already located in it\'s default location" "--path:Specify the path\(s\) to reformat" "-p:Specify the path\(s\) to reformat" "--commit:Specify a commit to reformat from. For git you can also pass a range of commits \(foo..bar\) to format all of them at the same time." "-c:Specify a commit to reformat from. For git you can also pass a range of commits \(foo..bar\) to format all of them at the same time." "--output:Specify a file handle to write clang-format raw output instead of applying changes. This can be stdout or a file path." "-o:Specify a file handle to write clang-format raw output instead of applying changes. This can be stdout or a file path." "--format:Specify the output format used: diff is the raw patch provided by clang-format, json is a list of atomic changes to process." "-f:Specify the output format used: diff is the raw patch provided by clang-format, json is a list of atomic changes to process." "--outgoing:Run clang-format on outgoing files from mercurial repository.")
            ;;

            (clobber)
            opts+=("--full:Perform a full clobber")
            ;;

            (compare-locales)
            opts+=("-q:Show less data.\
Specified once, don\'t show obsolete entities. Specified twice, also hide\
missing entities. Specify thrice to exclude warnings and four times to\
just show stats" "--quiet:Show less data.\
Specified once, don\'t show obsolete entities. Specified twice, also hide\
missing entities. Specify thrice to exclude warnings and four times to\
just show stats" "-m:Use this directory to stage merged files" "--merge:Use this directory to stage merged files" "--validate:Run compare-locales against reference" "--json:Serialize to JSON. Value is the name of\
the output file, pass \\\"-\\\" to serialize to stdout and hide the default output.\
" "-D:Overwrite variables in TOML files" "--full:Compare projects that are disabled" "--return-zero:Return 0 regardless of l10n status")
            ;;

            (cppunittest)
            opts+=("--enable-webrender:Enable the WebRender compositor in Gecko.")
            ;;

            (crashtest)
            opts+=("-h:show this help message and exit" "--help:show this help message and exit" "--xre-path:absolute path to directory containing XRE \(probably xulrunner\)" "--symbols-path:absolute path to directory containing breakpad symbols, or the URL of a zip file containing symbols" "--debugger:use the given debugger to launch the application" "--debugger-args:pass the given args to the debugger _before_ the application on the command line" "--debugger-interactive:prevents the test harness from redirecting stdout and stderr for interactive debuggers" "--appname:absolute path to application, overriding default" "--extra-profile-file:copy specified files/dirs to testing profile" "--timeout:reftest will timeout in specified number of seconds. \[default %\(default\)s\]." "--leak-threshold:fail if the number of bytes leaked in default processes through refcounted objects \(or bytes in classes with MOZ_COUNT_CTOR and MOZ_COUNT_DTOR\) is greater than the given number" "--utility-path:absolute path to directory containing utility programs \(xpcshell, ssltunnel, certutil\)" "--total-chunks:how many chunks to split the tests up into" "--this-chunk:which chunk to run between 1 and --total-chunks" "--log-file:file to log output to in addition to stdout" "--skip-slow-tests:skip tests marked as slow when running" "--ignore-window-size:ignore the window size, which may cause spurious failures and passes" "--install-extension:install the specified extension in the testing profile. The extension file\'s name should be \<id\>.xpi where \<id\> is the extension\'s id as indicated in its install.rdf. An optional path can be specified too." "--marionette:host:port to use when connecting to Marionette" "--setenv:sets the given variable in the application\'s environment" "--filter:specifies a regular expression \(as could be passed to the JS RegExp constructor\) to test against URLs in the reftest manifest\; only test items that have a matching test URL will be run." "--shuffle:run reftests in random order" "--run-until-failure:stop running on the first failure. Useful for RR recordings." "--repeat:number of times the select test\(s\) will be executed. Useful for finding intermittent failures." "--focus-filter-mode:filters tests to run by whether they require focus. Valid values are \`all\', \`needs-focus\', or \`non-needs-focus\'. Defaults to \`all\'." "--disable-e10s:disables content processes" "--enable-fission:Run tests with fission \(site isolation\) enabled." "--setpref:defines an extra user preference" "--reftest-extension-path:Path to the reftest extension" "--special-powers-extension-path:Path to the special powers extension" "--cleanup-crashes:Delete pending crash reports before running tests." "--max-retries:The maximum number of attempts to try and recover from a crash before aborting the test run \[default 4\]." "--sandbox-read-whitelist:Path to add to the sandbox whitelist." "--verify:Run tests in verification mode: Run many times in different ways, to see if there are intermittent failures." "--verify-max-time:Maximum time, in seconds, to run in --verify mode.." "--enable-webrender:Enable the WebRender compositor in Gecko." "--headless:Run tests in headless mode." "--topsrcdir:Path to source directory" "--log-raw:Raw structured log messages \(provided by mozlog\)" "--log-unittest:Unittest style output \(provided by mozlog\)" "--log-xunit:xUnit compatible XML \(povided by mozlog\)" "--log-html:HTML report \(provided by mozlog\)" "--log-mach:Human-readable output \(provided by mozlog\)" "--log-tbpl:TBPL style log format \(provided by mozlog\)" "--log-grouped:Grouped summary of test results \(provided by mozlog\)" "--log-raw-level:A least log level to subscribe to for the given formatter \(debug, info, error, etc.\)" "--log-mach-verbose:Enables verbose mode for the given formatter." "--log-mach-level:A least log level to subscribe to for the given formatter \(debug, info, error, etc.\)" "--log-mach-buffer:If specified, enables message buffering at the given buffer size limit." "--log-mach-screenshot:Enable logging reftest-analyzer compatible screenshot data." "--log-mach-no-screenshot:Disable logging reftest-analyzer compatible screenshot data." "--log-tbpl-compact:Enables compact mode for the given formatter." "--log-tbpl-level:A least log level to subscribe to for the given formatter \(debug, info, error, etc.\)" "--log-tbpl-buffer:If specified, enables message buffering at the given buffer size limit." "--run-tests-in-parallel:run tests in parallel if possible")
            ;;

            (create-mach-environment)
            opts+=("-f:Force re-creating the virtualenv even if it is already up-to-date." "--force:Force re-creating the virtualenv even if it is already up-to-date.")
            ;;

            (doc)
            opts+=("--format:Documentation format to write." "--outdir:Where to write output." "--archive:Write a gzipped tarball of generated docs." "--no-open:Don\'t automatically open HTML docs in a browser." "--no-serve:Don\'t serve the generated docs after building." "--http:Serve documentation on the specified host and port, default \\\"localhost:5500\\\"." "--upload:Upload generated files to S3." "-j:Distribute the build over N processes in parallel." "--jobs:Distribute the build over N processes in parallel." "--write-url:Write S3 Upload URL to text file" "--verbose:Run Sphinx in verbose mode")
            ;;

            (doctor)
            opts+=("--fix:Attempt to fix found problems.")
            ;;

            (environment)
            opts+=("--format:Print data in the given format." "--output:Output to the given file." "-o:Output to the given file." "--verbose:Print verbose output." "-v:Print verbose output.")
            ;;

            (eslint)
            opts+=("-s:Configure eslint for optimal development." "--setup:Configure eslint for optimal development." "-b:Path to eslint binary." "--binary:Path to eslint binary." "--fix:Request that eslint automatically fix errors, where possible.")
            ;;

            (fetch-condprofile)
            opts+=("--target-dir:Target directory" "--platform:Platform" "--scenario:Scenario" "--customization:Customization" "--task-id:Task ID" "--download-cache" "--repo:Repository")
            ;;

            (file-info bugzilla-component)
            opts+=("-r:Version control revision to look up info from" "--rev:Version control revision to look up info from" "--format:Output format")
            ;;

            (file-info missing-bugzilla)
            opts+=("-r:Version control revision to look up info from" "--rev:Version control revision to look up info from" "--format:Output format")
            ;;

            (firefox-ui-functional)
            opts+=("-h:show this help message and exit" "--help:show this help message and exit" "--binary:path to gecko executable to launch before running the test" "--address:host:port of running Gecko instance to connect to" "--emulator:If no --address is given, then the harness will launch an emulator. \(See Remote options group.\) If --address is given, then the harness assumes you are running an emulator already, and will launch gecko app on that emulator." "--app:application to use. see marionette_driver.geckoinstance" "--app-arg:specify a command line argument to be passed onto the application" "--profile:profile to use when launching the gecko process. If not passed, then a profile will be constructed and used" "--setpref:set a browser preference\; repeat for multiple preferences." "--preferences:read preferences from a JSON or INI file. For INI, use \'file.ini:section\' to specify a particular section." "--addon:addon to install\; repeat for multiple addons." "--repeat:number of times to repeat the test\(s\)" "--run-until-failure:Run tests repeatedly and stop on the first time a test fails. Default cap is 30 runs, which can be overwritten with the --repeat parameter." "--testvars:path to a json file with any test data required" "--symbols-path:absolute path to directory containing breakpad symbols, or the url of a zip file containing symbols" "--socket-timeout:Set the global timeout for marionette socket operations. Default: %\(default\)ss." "--startup-timeout:the max number of seconds to wait for a Marionette connection after launching a binary. Default: %\(default\)ss." "--shuffle:run tests in a random order" "--shuffle-seed:Use given seed to shuffle tests" "--total-chunks:how many chunks to split the tests up into" "--this-chunk:which chunk to run" "--server-root:url to a webserver or path to a document root from which content resources are served \(default: /home/padenot/src/trees/mozilla-unified/testing/marionette/harness/marionette_harness/www\)." "--gecko-log:Define the path to store log file. If the path is a directory, the real log file will be created given the format gecko-\(timestamp\).log. If it is a file, if will be used directly. \'-\' may be passed to write to stdout. Default: \'./gecko.log\'" "--logger-name:Define the name to associate with the logger used" "--jsdebugger:Enable the jsdebugger for marionette javascript." "--pydebugger:Enable python post-mortem debugger when a test fails. Pass in the debugger you want to use, eg pdb or ipdb." "--enable-fission:Enable Fission \(site isolation\) in Gecko." "--enable-webrender:Enable the WebRender compositor in Gecko." "-z:Run tests in headless mode." "--headless:Run tests in headless mode." "--tag:Filter out tests that don\'t have the given tag. Can be used multiple times in which case the test must contain at least one of the given tags." "--workspace:Path to directory for Marionette output. \(Default: .\) \(Default profile dest: TMP\)" "-v:Increase verbosity to include debug messages with -v, and trace messages with -vv." "--verbose:Increase verbosity to include debug messages with -v, and trace messages with -vv." "--emulator-binary:Path to emulator binary. By default mozrunner uses \`which emulator\`" "--adb:Path to the adb. By default mozrunner uses \`which adb\`" "--avd:Name of an AVD available in your environment.See mozrunner.FennecEmulatorRunner" "--avd-home:Path to avd parent directory" "--device:Serial ID to connect to as seen in \`adb devices\`,e.g emulator-5444" "--package:Name of Android package, e.g. org.mozilla.fennec" "--log-raw:Raw structured log messages \(provided by mozlog\)" "--log-unittest:Unittest style output \(provided by mozlog\)" "--log-xunit:xUnit compatible XML \(povided by mozlog\)" "--log-html:HTML report \(provided by mozlog\)" "--log-mach:Human-readable output \(provided by mozlog\)" "--log-tbpl:TBPL style log format \(provided by mozlog\)" "--log-grouped:Grouped summary of test results \(provided by mozlog\)" "--log-raw-level:A least log level to subscribe to for the given formatter \(debug, info, error, etc.\)" "--log-mach-verbose:Enables verbose mode for the given formatter." "--log-mach-level:A least log level to subscribe to for the given formatter \(debug, info, error, etc.\)" "--log-mach-buffer:If specified, enables message buffering at the given buffer size limit." "--log-mach-screenshot:Enable logging reftest-analyzer compatible screenshot data." "--log-mach-no-screenshot:Disable logging reftest-analyzer compatible screenshot data." "--log-tbpl-compact:Enables compact mode for the given formatter." "--log-tbpl-level:A least log level to subscribe to for the given formatter \(debug, info, error, etc.\)" "--log-tbpl-buffer:If specified, enables message buffering at the given buffer size limit.")
            ;;

            (geckodriver)
            opts+=("--binary:Firefox binary \(defaults to the local build\)." "--debug:Enable the debugger. Not specifying a --debugger option will result in the default debugger being used." "--debugger:Name of debugger to use." "--debugger-args:Flags to pass to the debugger itself\; split as the Bourne shell would.")
            ;;

            (geckodriver-test)
            opts+=("-v:Verbose output for what commands the build is running." "--verbose:Verbose output for what commands the build is running.")
            ;;

            (geckoview-junit)
            opts+=("--no-install:Do not try to install application on device before running \(default: False\)" "-h:show this help message and exit" "--help:show this help message and exit" "--appname:Test package name." "--adbpath:Path to adb binary." "--deviceSerial:adb serial number of remote device. This is required when more than one device is connected to the host. Use \'adb devices\' to see connected devices. " "--setenv:Set target environment variable, like FOO=BAR" "--remoteTestRoot:Remote directory to use as test root \(eg. /data/local/tmp/test_root\)." "--disable-e10s:Disable multiprocess mode in test app." "--max-time:Max time in seconds to wait for tests \(default 2400s\)." "--runner:Test runner name." "--symbols-path:Path to directory containing breakpad symbols, or the URL of a zip file containing symbols." "--utility-path:Path to directory containing host utility programs." "--total-chunks:Total number of chunks to split tests into." "--this-chunk:If running tests by chunks, the chunk number to run." "--enable-coverage:Enable code coverage collection." "--coverage-output-dir:If collecting code coverage, save the report file in this dir." "--enable-webrender:Enable the WebRender compositor in Gecko." "--repeat:Repeat the tests the given number of times." "--run-until-failure:Run tests repeatedly but stop the first time a test fails." "--setpref:Defines an extra user preference." "--certificate-path:Path to directory containing certificate store." "--http-port:http port of the remote web server." "--remote-webserver:IP address of the remote web server." "--ssl-port:ssl port of the remote web server." "--test-filters-file:Line-delimited file containing test filter\(s\)" "--log-raw:Raw structured log messages \(provided by mozlog\)" "--log-unittest:Unittest style output \(provided by mozlog\)" "--log-xunit:xUnit compatible XML \(povided by mozlog\)" "--log-html:HTML report \(provided by mozlog\)" "--log-mach:Human-readable output \(provided by mozlog\)" "--log-tbpl:TBPL style log format \(provided by mozlog\)" "--log-grouped:Grouped summary of test results \(provided by mozlog\)" "--log-raw-level:A least log level to subscribe to for the given formatter \(debug, info, error, etc.\)" "--log-mach-verbose:Enables verbose mode for the given formatter." "--log-mach-level:A least log level to subscribe to for the given formatter \(debug, info, error, etc.\)" "--log-mach-buffer:If specified, enables message buffering at the given buffer size limit." "--log-mach-screenshot:Enable logging reftest-analyzer compatible screenshot data." "--log-mach-no-screenshot:Disable logging reftest-analyzer compatible screenshot data." "--log-tbpl-compact:Enables compact mode for the given formatter." "--log-tbpl-level:A least log level to subscribe to for the given formatter \(debug, info, error, etc.\)" "--log-tbpl-buffer:If specified, enables message buffering at the given buffer size limit.")
            ;;

            (gradle)
            opts+=("-v:Verbose output for what commands the build is running." "--verbose:Verbose output for what commands the build is running.")
            ;;

            (gtest)
            opts+=("--jobs:Run the tests in parallel using multiple processes." "-j:Run the tests in parallel using multiple processes." "--tbpl-parser:Output test results in a format that can be parsed by TBPL." "-t:Output test results in a format that can be parsed by TBPL." "--shuffle:Randomize the execution order of tests." "-s:Randomize the execution order of tests." "--enable-webrender:Enable the WebRender compositor in Gecko." "--package:Package name of test app." "--adbpath:Path to adb binary." "--deviceSerial:adb serial number of remote device. Required when more than one device is connected to the host. Use \'adb devices\' to see connected devices." "--remoteTestRoot:Remote directory to use as test root \(eg. /data/local/tmp/test_root\)." "--libxul:Path to gtest libxul.so." "--no-install:Skip the installation of the APK." "--debug:Enable the debugger. Not specifying a --debugger option will result in the default debugger being used." "--debugger:Name of debugger to use." "--debugger-args:Command-line arguments to pass to the debugger itself\; split as the Bourne shell would.")
            ;;

            (hazards bootstrap)
            opts+=("--verbose:Print verbose output." "-v:Print verbose output." "--cache-dir:Directory where to store the artifacts cache" "--skip-cache:Skip all local caches to force re-fetching remote artifacts." "--from-build:Download toolchains resulting from the given build\(s\)\; BUILD is a name of a toolchain task, e.g. linux64-clang" "--tooltool-manifest:Explicit tooltool manifest to process" "--authentication-file:Use the RelengAPI token found in the given file to authenticate" "--no-unpack:Do not unpack any downloaded file" "--retry:Number of times to retry failed downloads" "--bootstrap:Whether this is being called from bootstrap. This verifies the toolchain is annotated as a toolchain used for local development." "--artifact-manifest:Store a manifest about the downloaded taskcluster artifacts")
            ;;

            (hazards build-shell)
            opts+=("--mozconfig:Build with the given mozconfig." "--jobs:Number of concurrent jobs to run. Default is the number of CPUs." "-j:Number of concurrent jobs to run. Default is the number of CPUs." "-C:Change to a subdirectory of the build directory first." "--directory:Change to a subdirectory of the build directory first." "-v:Verbose output for what commands the build is running." "--verbose:Verbose output for what commands the build is running." "--keep-going:Keep building after an error has occurred")
            ;;

            (hazards compile)
            opts+=("--mozconfig:Build with the given mozconfig." "--application:Build the given application." "--jobs:Number of concurrent jobs to run. Default is the number of CPUs." "-j:Number of concurrent jobs to run. Default is the number of CPUs." "-C:Change to a subdirectory of the build directory first." "--directory:Change to a subdirectory of the build directory first." "-v:Verbose output for what commands the build is running." "--verbose:Verbose output for what commands the build is running." "--keep-going:Keep building after an error has occurred")
            ;;

            (hazards gather)
            opts+=("--application:Build the given application.")
            ;;

            (import-pr)
            opts+=("-b:Bug number to use in the commit messages." "--bug-number:Bug number to use in the commit messages." "-t:Bugzilla API token used to file a new bug if no bug number is provided." "--bugzilla-token:Bugzilla API token used to file a new bug if no bug number is provided." "-r:Reviewer nick to apply to commit messages." "--reviewer:Reviewer nick to apply to commit messages.")
            ;;

            (install)
            opts+=("-h:show this help message and exit" "--help:show this help message and exit")
            ;;

            (install-moz-phab)
            opts+=("--force:Force installation even if already installed." "-f:Force installation even if already installed.")
            ;;

            (jit-test)
            opts+=("--shell:The shell to be used")
            ;;

            (jsshell-bench)
            opts+=("-h:show this help message and exit" "--help:show this help message and exit" "-b:Path to the JS shell binary to use." "--binary:Path to the JS shell binary to use." "--arg:Extra arguments to pass to the JS shell." "--perfherder:Log PERFHERDER_DATA to stdout using the given suite name.")
            ;;

            (jstestbrowser)
            opts+=("-h:show this help message and exit" "--help:show this help message and exit" "--xre-path:absolute path to directory containing XRE \(probably xulrunner\)" "--symbols-path:absolute path to directory containing breakpad symbols, or the URL of a zip file containing symbols" "--debugger:use the given debugger to launch the application" "--debugger-args:pass the given args to the debugger _before_ the application on the command line" "--debugger-interactive:prevents the test harness from redirecting stdout and stderr for interactive debuggers" "--appname:absolute path to application, overriding default" "--extra-profile-file:copy specified files/dirs to testing profile" "--timeout:reftest will timeout in specified number of seconds. \[default %\(default\)s\]." "--leak-threshold:fail if the number of bytes leaked in default processes through refcounted objects \(or bytes in classes with MOZ_COUNT_CTOR and MOZ_COUNT_DTOR\) is greater than the given number" "--utility-path:absolute path to directory containing utility programs \(xpcshell, ssltunnel, certutil\)" "--total-chunks:how many chunks to split the tests up into" "--this-chunk:which chunk to run between 1 and --total-chunks" "--log-file:file to log output to in addition to stdout" "--skip-slow-tests:skip tests marked as slow when running" "--ignore-window-size:ignore the window size, which may cause spurious failures and passes" "--install-extension:install the specified extension in the testing profile. The extension file\'s name should be \<id\>.xpi where \<id\> is the extension\'s id as indicated in its install.rdf. An optional path can be specified too." "--marionette:host:port to use when connecting to Marionette" "--setenv:sets the given variable in the application\'s environment" "--filter:specifies a regular expression \(as could be passed to the JS RegExp constructor\) to test against URLs in the reftest manifest\; only test items that have a matching test URL will be run." "--shuffle:run reftests in random order" "--run-until-failure:stop running on the first failure. Useful for RR recordings." "--repeat:number of times the select test\(s\) will be executed. Useful for finding intermittent failures." "--focus-filter-mode:filters tests to run by whether they require focus. Valid values are \`all\', \`needs-focus\', or \`non-needs-focus\'. Defaults to \`all\'." "--disable-e10s:disables content processes" "--enable-fission:Run tests with fission \(site isolation\) enabled." "--setpref:defines an extra user preference" "--reftest-extension-path:Path to the reftest extension" "--special-powers-extension-path:Path to the special powers extension" "--cleanup-crashes:Delete pending crash reports before running tests." "--max-retries:The maximum number of attempts to try and recover from a crash before aborting the test run \[default 4\]." "--sandbox-read-whitelist:Path to add to the sandbox whitelist." "--verify:Run tests in verification mode: Run many times in different ways, to see if there are intermittent failures." "--verify-max-time:Maximum time, in seconds, to run in --verify mode.." "--enable-webrender:Enable the WebRender compositor in Gecko." "--headless:Run tests in headless mode." "--topsrcdir:Path to source directory" "--log-raw:Raw structured log messages \(provided by mozlog\)" "--log-unittest:Unittest style output \(provided by mozlog\)" "--log-xunit:xUnit compatible XML \(povided by mozlog\)" "--log-html:HTML report \(provided by mozlog\)" "--log-mach:Human-readable output \(provided by mozlog\)" "--log-tbpl:TBPL style log format \(provided by mozlog\)" "--log-grouped:Grouped summary of test results \(provided by mozlog\)" "--log-raw-level:A least log level to subscribe to for the given formatter \(debug, info, error, etc.\)" "--log-mach-verbose:Enables verbose mode for the given formatter." "--log-mach-level:A least log level to subscribe to for the given formatter \(debug, info, error, etc.\)" "--log-mach-buffer:If specified, enables message buffering at the given buffer size limit." "--log-mach-screenshot:Enable logging reftest-analyzer compatible screenshot data." "--log-mach-no-screenshot:Disable logging reftest-analyzer compatible screenshot data." "--log-tbpl-compact:Enables compact mode for the given formatter." "--log-tbpl-level:A least log level to subscribe to for the given formatter \(debug, info, error, etc.\)" "--log-tbpl-buffer:If specified, enables message buffering at the given buffer size limit." "--run-tests-in-parallel:run tests in parallel if possible")
            ;;

            (jstests)
            opts+=("--shell:The shell to be used")
            ;;

            (lint)
            opts+=("-h:show this help message and exit" "--help:show this help message and exit" "-l:Linters to run, e.g \'eslint\'. By default all linters are run for all the appropriate files." "--linter:Linters to run, e.g \'eslint\'. By default all linters are run for all the appropriate files." "--list:List all available linters and exit." "-W:Display and fail on warnings in addition to errors." "--warnings:Display and fail on warnings in addition to errors." "-v:Enable verbose logging." "--verbose:Enable verbose logging." "-f:Formatter to use. Defaults to \'stylish\' on stdout. You can specify an optional path as --format formatter:path that will be used instead of stdout. You can also use multiple formatters at the same time. Formatters available: compact, json, stylish, summary, treeherder, unix." "--format:Formatter to use. Defaults to \'stylish\' on stdout. You can specify an optional path as --format formatter:path that will be used instead of stdout. You can also use multiple formatters at the same time. Formatters available: compact, json, stylish, summary, treeherder, unix." "-n:Ignore all filtering. This is useful for quickly testing a directory that otherwise wouldn\'t be run, without needing to modify the config file." "--no-filter:Ignore all filtering. This is useful for quickly testing a directory that otherwise wouldn\'t be run, without needing to modify the config file." "-o:Lint files touched by commits that are not on the remote repository. Without arguments, finds the default remote that would be pushed to. The remote branch can also be specified manually. Works with mercurial or git." "--outgoing:Lint files touched by commits that are not on the remote repository. Without arguments, finds the default remote that would be pushed to. The remote branch can also be specified manually. Works with mercurial or git." "-w:Lint files touched by changes in the working directory \(i.e haven\'t been committed yet\). On git, --workdir=staged can be used to only consider staged files. Works with mercurial or git." "--workdir:Lint files touched by changes in the working directory \(i.e haven\'t been committed yet\). On git, --workdir=staged can be used to only consider staged files. Works with mercurial or git." "-r:Lint files touched by changes in revisions described by REV. For mercurial, it may be any revset. For git, it is a single tree-ish." "--rev:Lint files touched by changes in revisions described by REV. For mercurial, it may be any revset. For git, it is a single tree-ish." "--fix:Fix lint errors if possible. Any errors that could not be fixed will be printed as normal." "--edit:Each file containing lint errors will be opened in \$EDITOR one after the other." "--setup:Bootstrap linter dependencies without running any of the linters." "-j:Number of worker processes to spawn when running linters. Defaults to the number of cores in your CPU." "--jobs:Number of worker processes to spawn when running linters. Defaults to the number of cores in your CPU.")
            ;;

            (logspam bisect)
            opts+=("-h:show this help message and exit" "--help:show this help message and exit" "--platform:Platform to get logs for. Default: linux1804-64" "--warning-re:Regex used to match lines. Can be used to match debug messages that are not proper warnings." "--ignore-lines:Ignore line numbers when bisecting warnings. Useful if the line number of the warning has changed. Not so useful if there are a lot of similar warnings in the file." "--warning-limit:The threshold of warnings for going from good to bad. Default: 1000." "--required-test:Test that must be present to compare revisions")
            ;;

            (logspam file)
            opts+=("-h:show this help message and exit" "--help:show this help message and exit" "--platform:Platform to get logs for. Default: linux1804-64" "--warning-re:Regex used to match lines. Can be used to match debug messages that are not proper warnings." "--repo:Repository the revision corresponds to. Default: mozilla-central" "--no-cache:Redownload logs if already present." "--cache-dir:Directory to cache logs to. Default: \<repo\>-\<revision\>" "--warning-count:Number of warnings to show in the default summary. Default: 40" "--test-summary-count:Number of tests to list in warning summary mode. Default: 10" "--reverse:Print the least common warnings instead." "--component:Component to file the bug in." "--hgroot:local mozilla repo to use for mapping components" "--product:Product to file the bug in. Default: Core" "--api-key:The API key to use when creating the bug. Default: extracted from .hgrc")
            ;;

            (logspam report)
            opts+=("-h:show this help message and exit" "--help:show this help message and exit" "--platform:Platform to get logs for. Default: linux1804-64" "--warning-re:Regex used to match lines. Can be used to match debug messages that are not proper warnings." "--repo:Repository the revision corresponds to. Default: mozilla-central" "--no-cache:Redownload logs if already present." "--cache-dir:Directory to cache logs to. Default: \<repo\>-\<revision\>" "--warning-count:Number of warnings to show in the default summary. Default: 40" "--test-summary-count:Number of tests to list in warning summary mode. Default: 10" "--reverse:Print the least common warnings instead.")
            ;;

            (mach-completion bash)
            opts+=("-f:File path to save completion script." "--file:File path to save completion script.")
            ;;

            (mach-completion fish)
            opts+=("-f:File path to save completion script." "--file:File path to save completion script.")
            ;;

            (mach-completion zsh)
            opts+=("-f:File path to save completion script." "--file:File path to save completion script.")
            ;;

            (marionette-test)
            opts+=("-h:show this help message and exit" "--help:show this help message and exit" "--binary:path to gecko executable to launch before running the test" "--address:host:port of running Gecko instance to connect to" "--emulator:If no --address is given, then the harness will launch an emulator. \(See Remote options group.\) If --address is given, then the harness assumes you are running an emulator already, and will launch gecko app on that emulator." "--app:application to use. see marionette_driver.geckoinstance" "--app-arg:specify a command line argument to be passed onto the application" "--profile:profile to use when launching the gecko process. If not passed, then a profile will be constructed and used" "--setpref:set a browser preference\; repeat for multiple preferences." "--preferences:read preferences from a JSON or INI file. For INI, use \'file.ini:section\' to specify a particular section." "--addon:addon to install\; repeat for multiple addons." "--repeat:number of times to repeat the test\(s\)" "--run-until-failure:Run tests repeatedly and stop on the first time a test fails. Default cap is 30 runs, which can be overwritten with the --repeat parameter." "--testvars:path to a json file with any test data required" "--symbols-path:absolute path to directory containing breakpad symbols, or the url of a zip file containing symbols" "--socket-timeout:Set the global timeout for marionette socket operations. Default: %\(default\)ss." "--startup-timeout:the max number of seconds to wait for a Marionette connection after launching a binary. Default: %\(default\)ss." "--shuffle:run tests in a random order" "--shuffle-seed:Use given seed to shuffle tests" "--total-chunks:how many chunks to split the tests up into" "--this-chunk:which chunk to run" "--server-root:url to a webserver or path to a document root from which content resources are served \(default: /home/padenot/src/trees/mozilla-unified/testing/marionette/harness/marionette_harness/www\)." "--gecko-log:Define the path to store log file. If the path is a directory, the real log file will be created given the format gecko-\(timestamp\).log. If it is a file, if will be used directly. \'-\' may be passed to write to stdout. Default: \'./gecko.log\'" "--logger-name:Define the name to associate with the logger used" "--jsdebugger:Enable the jsdebugger for marionette javascript." "--pydebugger:Enable python post-mortem debugger when a test fails. Pass in the debugger you want to use, eg pdb or ipdb." "--enable-fission:Enable Fission \(site isolation\) in Gecko." "--enable-webrender:Enable the WebRender compositor in Gecko." "-z:Run tests in headless mode." "--headless:Run tests in headless mode." "--tag:Filter out tests that don\'t have the given tag. Can be used multiple times in which case the test must contain at least one of the given tags." "--workspace:Path to directory for Marionette output. \(Default: .\) \(Default profile dest: TMP\)" "-v:Increase verbosity to include debug messages with -v, and trace messages with -vv." "--verbose:Increase verbosity to include debug messages with -v, and trace messages with -vv." "--emulator-binary:Path to emulator binary. By default mozrunner uses \`which emulator\`" "--adb:Path to the adb. By default mozrunner uses \`which adb\`" "--avd:Name of an AVD available in your environment.See mozrunner.FennecEmulatorRunner" "--avd-home:Path to avd parent directory" "--device:Serial ID to connect to as seen in \`adb devices\`,e.g emulator-5444" "--package:Name of Android package, e.g. org.mozilla.fennec" "--log-raw:Raw structured log messages \(provided by mozlog\)" "--log-unittest:Unittest style output \(provided by mozlog\)" "--log-xunit:xUnit compatible XML \(povided by mozlog\)" "--log-html:HTML report \(provided by mozlog\)" "--log-mach:Human-readable output \(provided by mozlog\)" "--log-tbpl:TBPL style log format \(provided by mozlog\)" "--log-grouped:Grouped summary of test results \(provided by mozlog\)" "--log-raw-level:A least log level to subscribe to for the given formatter \(debug, info, error, etc.\)" "--log-mach-verbose:Enables verbose mode for the given formatter." "--log-mach-level:A least log level to subscribe to for the given formatter \(debug, info, error, etc.\)" "--log-mach-buffer:If specified, enables message buffering at the given buffer size limit." "--log-mach-screenshot:Enable logging reftest-analyzer compatible screenshot data." "--log-mach-no-screenshot:Disable logging reftest-analyzer compatible screenshot data." "--log-tbpl-compact:Enables compact mode for the given formatter." "--log-tbpl-level:A least log level to subscribe to for the given formatter \(debug, info, error, etc.\)" "--log-tbpl-buffer:If specified, enables message buffering at the given buffer size limit.")
            ;;

            (mochitest)
            opts+=("-h:show this help message and exit" "--help:show this help message and exit" "-f:Only run tests of this flavor." "--flavor:Only run tests of this flavor." "--keep-open:Always keep the browser open after tests complete. Or always close the browser with --keep-open=false" "--appname:Override the default binary used to run tests with the path provided, e.g /usr/bin/firefox. If you have run ./mach package beforehand, you can specify \'dist\' to run tests against the distribution bundle\'s binary." "--no-autorun:Do not start running tests automatically." "--timeout:The per-test timeout in seconds \(default: 60 seconds\)." "--max-timeouts:The maximum number of timeouts permitted before halting testing." "--total-chunks:Total number of chunks to split tests into." "--this-chunk:If running tests by chunks, the chunk number to run." "--chunk-by-runtime:Group tests such that each chunk has roughly the same runtime." "--chunk-by-dir:Group tests together in the same chunk that are in the same top chunkByDir directories." "--shuffle:Shuffle execution order of tests." "--bisect-chunk:Specify the failing test name to find the previous tests that may be causing the failure." "--start-at:Start running the test sequence at this test." "--end-at:Stop running the test sequence at this test." "--subsuite:Subsuite of tests to run. Unlike tags, subsuites also remove tests from the default set. Only one can be specified at once." "--setenv:Sets the given variable in the application\'s environment." "--install-extension:Install the specified extension in the testing profile. Can be a path to a .xpi file." "--repeat:Repeat the tests the given number of times." "--run-until-failure:Run tests repeatedly but stop the first time a test fails. Default cap is 30 runs, which can be overridden with the --repeat parameter." "--run-slower:Delay execution between tests." "--setpref:Defines an extra user preference." "--jsconsole:Open the Browser Console." "--jsdebugger:Start the browser JS debugger before running the test. Implies --no-autorun." "--jsdebugger-path:Path to a Firefox binary that will be used to run the toolbox. Should be used together with --jsdebugger." "--debug-on-failure:Breaks execution and enters the JS debugger on a test failure. Should be used together with --jsdebugger." "--disable-e10s:Run tests with electrolysis preferences and test filtering disabled." "--enable-fission:Run tests with fission \(site isolation\) enabled." "--enable-xorigin-tests:Run tests in a cross origin iframe." "--dmd:Run tests with DMD active." "--dump-output-directory:Specifies the directory in which to place dumped memory reports." "--dump-about-memory-after-test:Dump an about:memory log after each test in the directory specified by --dump-output-directory." "--dump-dmd-after-test:Dump a DMD log \(and an accompanying about:memory log\) after each test. These will be dumped into your default temp directory, NOT the directory specified by --dump-output-directory. The logs are numbered by test, and each test will include output that indicates the DMD output filename." "--screenshot-on-fail:Take screenshots on all test failures. Set \$MOZ_UPLOAD_DIR to a directory for storing the screenshots." "--quiet:Do not print test log lines unless a failure occurs." "--headless:Run tests in headless mode." "--use-test-media-devices:Use test media device drivers for media testing." "--debugger:Debugger binary to run tests in. Program name or path." "--debugger-args:Arguments to pass to the debugger." "--valgrind:Valgrind binary to run tests with. Program name or path." "--valgrind-args:Comma-separated list of extra arguments to pass to Valgrind." "--valgrind-supp-files:Comma-separated list of suppression files to pass to Valgrind." "--tag:Filter out tests that don\'t have the given tag. Can be used multiple times in which case the test must contain at least one of the given tags." "--marionette:host:port to use when connecting to Marionette" "--websocket-process-bridge-port:Port for websocket/process bridge. Default 8191." "--verify:Run tests in verification mode: Run many times in different ways, to see if there are intermittent failures." "--verify-fission:Run tests once without Fission, once with Fission" "--verify-max-time:Maximum time, in seconds, to run in --verify mode." "--enable-webrender:Enable the WebRender compositor in Gecko." "--profiler:Run the Firefox Profiler and get a performance profile of the mochitest. This is useful to find performance issues, and also to see what exactly the test is doing. To get profiler options run: \`MOZ_PROFILER_HELP=1 ./mach run\`" "--profiler-save-only:Run the Firefox Profiler and save it to the path specified by the MOZ_UPLOAD_DIR environment variable." "--log-raw:Raw structured log messages \(provided by mozlog\)" "--log-unittest:Unittest style output \(provided by mozlog\)" "--log-xunit:xUnit compatible XML \(povided by mozlog\)" "--log-html:HTML report \(provided by mozlog\)" "--log-mach:Human-readable output \(provided by mozlog\)" "--log-tbpl:TBPL style log format \(provided by mozlog\)" "--log-grouped:Grouped summary of test results \(provided by mozlog\)" "--log-raw-level:A least log level to subscribe to for the given formatter \(debug, info, error, etc.\)" "--log-mach-verbose:Enables verbose mode for the given formatter." "--log-mach-level:A least log level to subscribe to for the given formatter \(debug, info, error, etc.\)" "--log-mach-buffer:If specified, enables message buffering at the given buffer size limit." "--log-mach-screenshot:Enable logging reftest-analyzer compatible screenshot data." "--log-mach-no-screenshot:Disable logging reftest-analyzer compatible screenshot data." "--log-tbpl-compact:Enables compact mode for the given formatter." "--log-tbpl-level:A least log level to subscribe to for the given formatter \(debug, info, error, etc.\)" "--log-tbpl-buffer:If specified, enables message buffering at the given buffer size limit.")
            ;;

            (mozbuild-reference)
            opts+=("--name-only:Print symbol names only." "-n:Print symbol names only.")
            ;;

            (mozharness)
            opts+=("-h:show this help message and exit" "--help:show this help message and exit")
            ;;

            (mozregression)
            opts+=("-h:show this help message and exit" "--help:show this help message and exit" "--version:print the mozregression version number and exits." "-b:first known bad build, default is today. It can be a date \(YYYY-MM-DD\), a build id, a release number or a changeset." "--bad:first known bad build, default is today. It can be a date \(YYYY-MM-DD\), a build id, a release number or a changeset." "-g:last known good build. Same possible values as the --bad option." "--good:last known good build. Same possible values as the --bad option." "--list-releases:list all known releases and exit" "-B:Build type to use, e.g. opt, debug. See --list-build-types for available values. Defaults to shippable for desktop Fx, opt for everything else." "--build-type:Build type to use, e.g. opt, debug. See --list-build-types for available values. Defaults to shippable for desktop Fx, opt for everything else." "--list-build-types:List available build types combinations." "--find-fix:Search for a bug fix instead of a regression." "-e:addon to install\; repeat for multiple addons." "--addon:addon to install\; repeat for multiple addons." "-p:profile to use with nightlies." "--profile:profile to use with nightlies." "--adb-profile-dir:Path to use on android devices for storing the profile. Generally you should not need to specify this, and an appropriate path will be used. Specifying this to a value, e.g. \'/sdcard/tests\' will forcibly try to create the profile inside that folder." "--profile-persistence:Persistence of the used profile. Before each tested build, a profile is used. If the value of this option is \'clone\', each test uses a fresh clone. If the value is \'clone-first\', the profile is cloned once then reused for all builds during the  bisection. If the value is \'reuse\', the given profile is directly used. Note that the profile might be modified by mozregression. Defaults to %\(default\)s." "-a:a command-line argument to pass to the application\; repeat for multiple arguments. Use --arg=\'-option\' to pass in options starting with \`-\`." "--arg:a command-line argument to pass to the application\; repeat for multiple arguments. Use --arg=\'-option\' to pass in options starting with \`-\`." "--pref: A preference to set. Must be a key-value pair separated by a \':\'. Note that if your preference is of type float, you should pass it as a string, e.g.: --pref \\\"layers.low-precision-opacity:\'0.0\'\\\" "--preferences:read preferences from a JSON or INI file. For INI, use \'file.ini:section\' to specify a particular section." "-n:application name. Default: %\(default\)s." "--app:application name. Default: %\(default\)s." "--lang:build language. Only valid when app is firefox-l10n." "--repo:repository name used for the bisection." "--bits:force 32 or 64 bit version \(only applies to x86_64 boxes\). Default: None bits." "--arch:Force x86_64 build \(only applies to GVE app\). Default: arm" "-c:Test command to evaluate builds automatically. A return code of 0 will evaluate the build as good, and any other value as bad. Variables like \{binary\} can be used, which will be replaced with their value as retrieved by the actual build." "--command:Test command to evaluate builds automatically. A return code of 0 will evaluate the build as good, and any other value as bad. Variables like \{binary\} can be used, which will be replaced with their value as retrieved by the actual build." "--persist:the directory in which downloaded files are to persist. Defaults to %\(default\)r." "--persist-size-limit:Size limit for the persist directory in gigabytes \(GiB\). When the limit is reached, old builds are removed. 0 means no limit. Note that at least 5 build files are kept, regardless of this value. Defaults to %\(default\)s." "--http-timeout:Timeout in seconds to abort requests when there is no activity from the server. Default to %\(default\)s seconds - increase this if you are under a really slow network." "--no-background-dl:Do not download next builds in the background while evaluating the current build." "--background-dl-policy:Policy to use for background downloads. Possible values are \\\"cancel\\\" to cancel all pending background downloads or \\\"keep\\\" to keep downloading them when persist mode is enabled. The default is %\(default\)s." "--approx-policy:Policy to reuse approximate persistent builds instead of downloading the accurate ones. When auto, mozregression will try its best to reuse the files, meaning that for 7 days of bisection range it will try to reuse a build which date approximates the build to download by one day \(before or after\). Use none to disable this behavior. Defaults to %\(default\)s." "--launch:Launch only one specific build. Same possible values as the --bad option." "-P:Manage process output logging. Set to stdout by default when the build type is not \'opt\'." "--process-output:Manage process output logging. Set to stdout by default when the build type is not \'opt\'." "-M:bisection mode. \'classic\' will check for the first good and bad builds to really be good and bad, and \'no-first-check\' won\'t. Defaults to %\(default\)s." "--mode:bisection mode. \'classic\' will check for the first good and bad builds to really be good and bad, and \'no-first-check\' won\'t. Defaults to %\(default\)s." "--archive-base-url:Base url used to find the archived builds. Defaults to %\(default\)s" "--write-config:Helps to write the configuration file." "--debug:Show the debug output." "-d:Show the debug output.")
            ;;

            (package)
            opts+=("-v:Verbose output for what commands the packaging process is running." "--verbose:Verbose output for what commands the packaging process is running.")
            ;;

            (package-multi-locale)
            opts+=("--locales:List of locales to package, including \\\"en-US\\\" "--verbose:Log informative status messages.")
            ;;

            (pastebin)
            opts+=("--list-highlighters:List known highlighters and exit" "--highlighter:Syntax highlighting to use for paste" "--expires:Expire paste after given time duration \(default: %\(default\)s\)" "--verbose:Print extra info such as selected syntax highlighter")
            ;;

            (perftest-test)
            opts+=("-s:Skip flake8 and black" "--skip-linters:Skip flake8 and black" "-v:Verbose mode" "--verbose:Verbose mode")
            ;;

            (power)
            opts+=("-i:The sample period, measured in milliseconds. Defaults to 30000." "--interval:The sample period, measured in milliseconds. Defaults to 30000.")
            ;;

            (prettier-format)
            opts+=("--path:Specify the path to reformat to stdout." "-p:Specify the path to reformat to stdout." "--assume-filename:This option is usually used in the context of hg-formatsource.When reading from stdin, Prettier assumes this filename to decide which style and parser to use." "-a:This option is usually used in the context of hg-formatsource.When reading from stdin, Prettier assumes this filename to decide which style and parser to use.")
            ;;

            (puppeteer-test)
            opts+=("-h:show this help message and exit" "--help:show this help message and exit" "--product" "--binary:Path to browser binary.  Defaults to local Firefox build." "--enable-fission:Enable Fission \(site isolation\) in Gecko." "-z:Run browser in headless mode." "--headless:Run browser in headless mode." "--setpref:Defines additional user preferences." "--setopt:Defines additional options for \`puppeteer.launch\`." "-v:Increase remote agent logging verbosity to include debug level messages with -v, trace messages with -vv,and to not truncate long trace messages with -vvv" "--write-results:Path to write updated results to \(defaults to the expectations file if the argument is provided but no path is passed\)" "--subset:Indicate that only a subset of the tests are running, so checks for missing tests should be skipped" "--log-raw:Raw structured log messages \(provided by mozlog\)" "--log-unittest:Unittest style output \(provided by mozlog\)" "--log-xunit:xUnit compatible XML \(povided by mozlog\)" "--log-html:HTML report \(provided by mozlog\)" "--log-mach:Human-readable output \(provided by mozlog\)" "--log-tbpl:TBPL style log format \(provided by mozlog\)" "--log-grouped:Grouped summary of test results \(provided by mozlog\)" "--log-raw-level:A least log level to subscribe to for the given formatter \(debug, info, error, etc.\)" "--log-mach-verbose:Enables verbose mode for the given formatter." "--log-mach-level:A least log level to subscribe to for the given formatter \(debug, info, error, etc.\)" "--log-mach-buffer:If specified, enables message buffering at the given buffer size limit." "--log-mach-screenshot:Enable logging reftest-analyzer compatible screenshot data." "--log-mach-no-screenshot:Disable logging reftest-analyzer compatible screenshot data." "--log-tbpl-compact:Enables compact mode for the given formatter." "--log-tbpl-level:A least log level to subscribe to for the given formatter \(debug, info, error, etc.\)" "--log-tbpl-buffer:If specified, enables message buffering at the given buffer size limit.")
            ;;

            (python)
            opts+=("--no-virtualenv:Do not set up a virtualenv" "--exec-file:Execute this Python file using \`exec\`" "--ipython:Use ipython instead of the default Python REPL.")
            ;;

            (python-test)
            opts+=("-v:Verbose output." "--verbose:Verbose output." "-j:Number of concurrent jobs to run. Default is the number of CPUs in the system." "--jobs:Number of concurrent jobs to run. Default is the number of CPUs in the system." "-x:Runs all tests sequentially and breaks at the first failure." "--exitfirst:Runs all tests sequentially and breaks at the first failure." "--subsuite:Python subsuite to run. If not specified, all subsuites are run. Use the string \`default\` to only run tests without a subsuite.")
            ;;

            (raptor)
            opts+=("-h:show this help message and exit" "--help:show this help message and exit" "-t:Name of Raptor test to run \(can be a top-level suite name i.e. \'--test raptor-speedometer\',\'--test raptor-tp6-1\', or for page-load tests a suite sub-test i.e. \'--test raptor-tp6-google-firefox\'\)" "--test:Name of Raptor test to run \(can be a top-level suite name i.e. \'--test raptor-speedometer\',\'--test raptor-tp6-1\', or for page-load tests a suite sub-test i.e. \'--test raptor-tp6-google-firefox\'\)" "--app:Name of the application we are testing \(default: firefox\)" "-b:path to the browser executable that we are testing" "--binary:path to the browser executable that we are testing" "-a:Name of Android activity used to launch the Android app.i.e.: \[\'geckoview:org.mozilla.geckoview_example.GeckoViewActivity\', \'refbrow:org.mozilla.reference.browser.BrowserTestActivity\', \'fenix:org.mozilla.fenix.IntentReceiverActivity\', \'chrome-m:com.android.chrome/com.google.android.apps.chrome.Main\'\]" "--activity:Name of Android activity used to launch the Android app.i.e.: \[\'geckoview:org.mozilla.geckoview_example.GeckoViewActivity\', \'refbrow:org.mozilla.reference.browser.BrowserTestActivity\', \'fenix:org.mozilla.fenix.IntentReceiverActivity\', \'chrome-m:com.android.chrome/com.google.android.apps.chrome.Main\'\]" "-i:Name of Android intent action used to launch the Android app.i.e.: \[\'geckoview:android.intent.action.MAIN\', \'refbrow:android.intent.action.MAIN\', \'fenix:android.intent.action.VIEW\', \'chrome-m:android.intent.action.VIEW\'\]" "--intent:Name of Android intent action used to launch the Android app.i.e.: \[\'geckoview:android.intent.action.MAIN\', \'refbrow:android.intent.action.MAIN\', \'fenix:android.intent.action.VIEW\', \'chrome-m:android.intent.action.VIEW\'\]" "--host:Hostname from which to serve URLs\; defaults to 127.0.0.1. The value HOST_IP will cause the value of host to be loaded from the environment variable HOST_IP." "--power-test:Use Raptor to measure power usage on Android browsers \(Geckoview Example, Fenix, Refbrow, and Fennec\) as well as on Intel-based MacOS machines that have Intel Power Gadget installed." "--memory-test:Use Raptor to measure memory usage." "--cpu-test:Use Raptor to measure CPU usage. Currently supported for Android only." "--live-sites:Run tests using live sites instead of recorded sites." "--chimera:Run tests in chimera mode. Each browser cycle will run a cold and warm test." "--is-release-build:Whether the build is a release build which requires workarounds using MOZ_DISABLE_NONLOCAL_CONNECTIONS to support installing unsigned webextensions. Defaults to False." "--gecko-profile:Profile the run and out-put the results in \$MOZ_UPLOAD_DIR. After talos is finished, profiler.firefox.com will be launched in Firefox so you can analyze the local profiles. To disable auto-launching of profiler.firefox.com, set the DISABLE_PROFILE_LAUNCH=1 env var." "--gecko-profile-entries:How many samples to take with the profiler" "--gecko-profile-interval:How frequently to take samples \(milliseconds\)" "--gecko-profile-thread:Name of the extra thread to be profiled" "--symbolsPath:Path to the symbols for the build we are testing" "--page-cycles:How many times to repeat loading the test page \(for page load tests\)\; for benchmark tests, this is how many times the benchmark test will be run" "--page-timeout:How long to wait \(ms\) for one page_cycle to complete, before timing out" "--post-startup-delay:How long to wait \(ms\) after browser start-up before starting the tests" "--browser-cycles:The number of times a cold load test is repeated \(for cold load tests only, where the browser is shutdown and restarted between test iterations\)" "--project:Project name \(try, mozilla-central, etc.\)" "--test-url-params:Parameters to add to the test_url query string" "--print-tests:Print all available Raptor tests" "--debug-mode:Run Raptor in debug mode \(open browser console, limited page-cycles, etc.\)" "--disable-e10s:Run without multiple processes \(e10s\)." "--enable-webrender:Enable the WebRender compositor in Gecko." "--no-conditioned-profile:Run Raptor tests without a conditioned profile." "--device-name:Device name of mobile device." "--enable-fission:Enable Fission \(site isolation\) in Gecko." "--setpref:Set a browser preference. May be used multiple times." "--noinstall:Flag which indicates if Raptor should not offer to install Android APK." "--installerpath:Location where Android browser APK was extracted to before installation." "--disable-perf-tuning:Disable performance tuning on android." "--conditioned-profile-scenario:Name of profile scenario." "--cold:Enable cold page-load for browsertime tp6" "--browsertime:Whether to use browsertime to execute pageload tests" "--browsertime-node:path to Node.js executable" "--browsertime-browsertimejs:path to browsertime.js script" "--browsertime-vismet-script:path to visualmetrics.py script" "--browsertime-chromedriver:path to chromedriver executable" "--browsertime-video:records the viewport" "--browsertime-visualmetrics:enables visual metrics" "--browsertime-no-ffwindowrecorder:disable the firefox window recorder" "--browsertime-ffmpeg:path to ffmpeg executable \(for \`--video=true\`\)" "--browsertime-geckodriver:path to geckodriver executable" "--verbose:Verbose output" "--log-raw:Raw structured log messages \(provided by mozlog\)" "--log-unittest:Unittest style output \(provided by mozlog\)" "--log-xunit:xUnit compatible XML \(povided by mozlog\)" "--log-html:HTML report \(provided by mozlog\)" "--log-mach:Human-readable output \(provided by mozlog\)" "--log-tbpl:TBPL style log format \(provided by mozlog\)" "--log-grouped:Grouped summary of test results \(provided by mozlog\)" "--log-raw-level:A least log level to subscribe to for the given formatter \(debug, info, error, etc.\)" "--log-mach-verbose:Enables verbose mode for the given formatter." "--log-mach-level:A least log level to subscribe to for the given formatter \(debug, info, error, etc.\)" "--log-mach-buffer:If specified, enables message buffering at the given buffer size limit." "--log-mach-screenshot:Enable logging reftest-analyzer compatible screenshot data." "--log-mach-no-screenshot:Disable logging reftest-analyzer compatible screenshot data." "--log-tbpl-compact:Enables compact mode for the given formatter." "--log-tbpl-level:A least log level to subscribe to for the given formatter \(debug, info, error, etc.\)" "--log-tbpl-buffer:If specified, enables message buffering at the given buffer size limit.")
            ;;

            (raptor-test)
            opts+=("-h:show this help message and exit" "--help:show this help message and exit" "-t:Name of Raptor test to run \(can be a top-level suite name i.e. \'--test raptor-speedometer\',\'--test raptor-tp6-1\', or for page-load tests a suite sub-test i.e. \'--test raptor-tp6-google-firefox\'\)" "--test:Name of Raptor test to run \(can be a top-level suite name i.e. \'--test raptor-speedometer\',\'--test raptor-tp6-1\', or for page-load tests a suite sub-test i.e. \'--test raptor-tp6-google-firefox\'\)" "--app:Name of the application we are testing \(default: firefox\)" "-b:path to the browser executable that we are testing" "--binary:path to the browser executable that we are testing" "-a:Name of Android activity used to launch the Android app.i.e.: \[\'geckoview:org.mozilla.geckoview_example.GeckoViewActivity\', \'refbrow:org.mozilla.reference.browser.BrowserTestActivity\', \'fenix:org.mozilla.fenix.IntentReceiverActivity\', \'chrome-m:com.android.chrome/com.google.android.apps.chrome.Main\'\]" "--activity:Name of Android activity used to launch the Android app.i.e.: \[\'geckoview:org.mozilla.geckoview_example.GeckoViewActivity\', \'refbrow:org.mozilla.reference.browser.BrowserTestActivity\', \'fenix:org.mozilla.fenix.IntentReceiverActivity\', \'chrome-m:com.android.chrome/com.google.android.apps.chrome.Main\'\]" "-i:Name of Android intent action used to launch the Android app.i.e.: \[\'geckoview:android.intent.action.MAIN\', \'refbrow:android.intent.action.MAIN\', \'fenix:android.intent.action.VIEW\', \'chrome-m:android.intent.action.VIEW\'\]" "--intent:Name of Android intent action used to launch the Android app.i.e.: \[\'geckoview:android.intent.action.MAIN\', \'refbrow:android.intent.action.MAIN\', \'fenix:android.intent.action.VIEW\', \'chrome-m:android.intent.action.VIEW\'\]" "--host:Hostname from which to serve URLs\; defaults to 127.0.0.1. The value HOST_IP will cause the value of host to be loaded from the environment variable HOST_IP." "--power-test:Use Raptor to measure power usage on Android browsers \(Geckoview Example, Fenix, Refbrow, and Fennec\) as well as on Intel-based MacOS machines that have Intel Power Gadget installed." "--memory-test:Use Raptor to measure memory usage." "--cpu-test:Use Raptor to measure CPU usage. Currently supported for Android only." "--live-sites:Run tests using live sites instead of recorded sites." "--chimera:Run tests in chimera mode. Each browser cycle will run a cold and warm test." "--is-release-build:Whether the build is a release build which requires workarounds using MOZ_DISABLE_NONLOCAL_CONNECTIONS to support installing unsigned webextensions. Defaults to False." "--gecko-profile:Profile the run and out-put the results in \$MOZ_UPLOAD_DIR. After talos is finished, profiler.firefox.com will be launched in Firefox so you can analyze the local profiles. To disable auto-launching of profiler.firefox.com, set the DISABLE_PROFILE_LAUNCH=1 env var." "--gecko-profile-entries:How many samples to take with the profiler" "--gecko-profile-interval:How frequently to take samples \(milliseconds\)" "--gecko-profile-thread:Name of the extra thread to be profiled" "--symbolsPath:Path to the symbols for the build we are testing" "--page-cycles:How many times to repeat loading the test page \(for page load tests\)\; for benchmark tests, this is how many times the benchmark test will be run" "--page-timeout:How long to wait \(ms\) for one page_cycle to complete, before timing out" "--post-startup-delay:How long to wait \(ms\) after browser start-up before starting the tests" "--browser-cycles:The number of times a cold load test is repeated \(for cold load tests only, where the browser is shutdown and restarted between test iterations\)" "--project:Project name \(try, mozilla-central, etc.\)" "--test-url-params:Parameters to add to the test_url query string" "--print-tests:Print all available Raptor tests" "--debug-mode:Run Raptor in debug mode \(open browser console, limited page-cycles, etc.\)" "--disable-e10s:Run without multiple processes \(e10s\)." "--enable-webrender:Enable the WebRender compositor in Gecko." "--no-conditioned-profile:Run Raptor tests without a conditioned profile." "--device-name:Device name of mobile device." "--enable-fission:Enable Fission \(site isolation\) in Gecko." "--setpref:Set a browser preference. May be used multiple times." "--noinstall:Flag which indicates if Raptor should not offer to install Android APK." "--installerpath:Location where Android browser APK was extracted to before installation." "--disable-perf-tuning:Disable performance tuning on android." "--conditioned-profile-scenario:Name of profile scenario." "--cold:Enable cold page-load for browsertime tp6" "--browsertime:Whether to use browsertime to execute pageload tests" "--browsertime-node:path to Node.js executable" "--browsertime-browsertimejs:path to browsertime.js script" "--browsertime-vismet-script:path to visualmetrics.py script" "--browsertime-chromedriver:path to chromedriver executable" "--browsertime-video:records the viewport" "--browsertime-visualmetrics:enables visual metrics" "--browsertime-no-ffwindowrecorder:disable the firefox window recorder" "--browsertime-ffmpeg:path to ffmpeg executable \(for \`--video=true\`\)" "--browsertime-geckodriver:path to geckodriver executable" "--verbose:Verbose output" "--log-raw:Raw structured log messages \(provided by mozlog\)" "--log-unittest:Unittest style output \(provided by mozlog\)" "--log-xunit:xUnit compatible XML \(povided by mozlog\)" "--log-html:HTML report \(provided by mozlog\)" "--log-mach:Human-readable output \(provided by mozlog\)" "--log-tbpl:TBPL style log format \(provided by mozlog\)" "--log-grouped:Grouped summary of test results \(provided by mozlog\)" "--log-raw-level:A least log level to subscribe to for the given formatter \(debug, info, error, etc.\)" "--log-mach-verbose:Enables verbose mode for the given formatter." "--log-mach-level:A least log level to subscribe to for the given formatter \(debug, info, error, etc.\)" "--log-mach-buffer:If specified, enables message buffering at the given buffer size limit." "--log-mach-screenshot:Enable logging reftest-analyzer compatible screenshot data." "--log-mach-no-screenshot:Disable logging reftest-analyzer compatible screenshot data." "--log-tbpl-compact:Enables compact mode for the given formatter." "--log-tbpl-level:A least log level to subscribe to for the given formatter \(debug, info, error, etc.\)" "--log-tbpl-buffer:If specified, enables message buffering at the given buffer size limit.")
            ;;

            (reftest)
            opts+=("-h:show this help message and exit" "--help:show this help message and exit" "--xre-path:absolute path to directory containing XRE \(probably xulrunner\)" "--symbols-path:absolute path to directory containing breakpad symbols, or the URL of a zip file containing symbols" "--debugger:use the given debugger to launch the application" "--debugger-args:pass the given args to the debugger _before_ the application on the command line" "--debugger-interactive:prevents the test harness from redirecting stdout and stderr for interactive debuggers" "--appname:absolute path to application, overriding default" "--extra-profile-file:copy specified files/dirs to testing profile" "--timeout:reftest will timeout in specified number of seconds. \[default %\(default\)s\]." "--leak-threshold:fail if the number of bytes leaked in default processes through refcounted objects \(or bytes in classes with MOZ_COUNT_CTOR and MOZ_COUNT_DTOR\) is greater than the given number" "--utility-path:absolute path to directory containing utility programs \(xpcshell, ssltunnel, certutil\)" "--total-chunks:how many chunks to split the tests up into" "--this-chunk:which chunk to run between 1 and --total-chunks" "--log-file:file to log output to in addition to stdout" "--skip-slow-tests:skip tests marked as slow when running" "--ignore-window-size:ignore the window size, which may cause spurious failures and passes" "--install-extension:install the specified extension in the testing profile. The extension file\'s name should be \<id\>.xpi where \<id\> is the extension\'s id as indicated in its install.rdf. An optional path can be specified too." "--marionette:host:port to use when connecting to Marionette" "--setenv:sets the given variable in the application\'s environment" "--filter:specifies a regular expression \(as could be passed to the JS RegExp constructor\) to test against URLs in the reftest manifest\; only test items that have a matching test URL will be run." "--shuffle:run reftests in random order" "--run-until-failure:stop running on the first failure. Useful for RR recordings." "--repeat:number of times the select test\(s\) will be executed. Useful for finding intermittent failures." "--focus-filter-mode:filters tests to run by whether they require focus. Valid values are \`all\', \`needs-focus\', or \`non-needs-focus\'. Defaults to \`all\'." "--disable-e10s:disables content processes" "--enable-fission:Run tests with fission \(site isolation\) enabled." "--setpref:defines an extra user preference" "--reftest-extension-path:Path to the reftest extension" "--special-powers-extension-path:Path to the special powers extension" "--cleanup-crashes:Delete pending crash reports before running tests." "--max-retries:The maximum number of attempts to try and recover from a crash before aborting the test run \[default 4\]." "--sandbox-read-whitelist:Path to add to the sandbox whitelist." "--verify:Run tests in verification mode: Run many times in different ways, to see if there are intermittent failures." "--verify-max-time:Maximum time, in seconds, to run in --verify mode.." "--enable-webrender:Enable the WebRender compositor in Gecko." "--headless:Run tests in headless mode." "--topsrcdir:Path to source directory" "--log-raw:Raw structured log messages \(provided by mozlog\)" "--log-unittest:Unittest style output \(provided by mozlog\)" "--log-xunit:xUnit compatible XML \(povided by mozlog\)" "--log-html:HTML report \(provided by mozlog\)" "--log-mach:Human-readable output \(provided by mozlog\)" "--log-tbpl:TBPL style log format \(provided by mozlog\)" "--log-grouped:Grouped summary of test results \(provided by mozlog\)" "--log-raw-level:A least log level to subscribe to for the given formatter \(debug, info, error, etc.\)" "--log-mach-verbose:Enables verbose mode for the given formatter." "--log-mach-level:A least log level to subscribe to for the given formatter \(debug, info, error, etc.\)" "--log-mach-buffer:If specified, enables message buffering at the given buffer size limit." "--log-mach-screenshot:Enable logging reftest-analyzer compatible screenshot data." "--log-mach-no-screenshot:Disable logging reftest-analyzer compatible screenshot data." "--log-tbpl-compact:Enables compact mode for the given formatter." "--log-tbpl-level:A least log level to subscribe to for the given formatter \(debug, info, error, etc.\)" "--log-tbpl-buffer:If specified, enables message buffering at the given buffer size limit." "--run-tests-in-parallel:run tests in parallel if possible")
            ;;

            (release buglist)
            opts+=("--version:The version being built." "--product:The product being built." "--repo:The repo being built." "--revision:The revision being built.")
            ;;

            (release push-scriptworker-canary)
            opts+=("--address:The email address to send notifications to \(may be specified more than once\)." "--scriptworker:Scriptworker to run canary for \(may be specified more than once\)." "--ssh-key-secret:Taskcluster secret with ssh-key to use for hg.mozilla.org")
            ;;

            (release send-buglist-email)
            opts+=("--address:The email address to send the bug list to \(may be specified more than once." "--version:The version being built." "--product:The product being built." "--repo:The repo being built." "--revision:The revision being built." "--build-number:The build number" "--task-group-id:The task group of the build.")
            ;;

            (release-history)
            opts+=("-b:The gecko project branch used in balrog, such as mozilla-central, release, maple" "--branch:The gecko project branch used in balrog, such as mozilla-central, release, maple" "--product:The product identifier, such as \'Firefox\'")
            ;;

            (remote vendor-puppeteer)
            opts+=("--repository:The \(possibly remote\) repository to clone from." "--commitish:The commit or tag object name to check out.")
            ;;

            (repackage dmg)
            opts+=("--input:Input filename" "-i:Input filename" "--output:Output filename" "-o:Output filename")
            ;;

            (repackage installer)
            opts+=("--tag:The .tag file used to build the installer" "--setupexe:setup.exe file inside the installer" "--package:Optional package .zip for building a full installer" "--output:Output filename" "-o:Output filename" "--package-name:Name of the package being rebuilt" "--sfx-stub:Path to the self-extraction stub." "--use-upx:Run UPX on the self-extraction stub.")
            ;;

            (repackage mar)
            opts+=("--input:Input filename" "-i:Input filename" "--mar:Mar binary path" "--output:Output filename" "-o:Output filename" "--arch:The archtecture you are building." "--mar-channel-id:Mar channel id")
            ;;

            (repackage msi)
            opts+=("--wsx:The wsx file used to build the installer" "--version:The Firefox version used to create the installer" "--locale:The locale of the installer" "--arch:The archtecture you are building." "--setupexe:setup.exe installer" "--candle:location of candle binary" "--light:location of light binary" "--output:Output filename" "-o:Output filename")
            ;;

            (resource-usage)
            opts+=("--address:Address the HTTP server should listen on." "--port:Port number the HTTP server should listen on." "--browser:Web browser to automatically open. See webbrowser Python module." "--url:URL of JSON document to display")
            ;;

            (run)
            opts+=("-h:show this help message and exit" "--help:show this help message and exit" "--packaged:Run a packaged build." "--remote:Do not pass the --no-remote argument by default." "-r:Do not pass the --no-remote argument by default." "--background:Do not pass the --foreground argument by default on Mac." "-b:Do not pass the --foreground argument by default on Mac." "--noprofile:Do not pass the --profile argument by default." "-n:Do not pass the --profile argument by default." "--disable-e10s:Run the program with electrolysis disabled." "--enable-crash-reporter:Run the program with the crash reporter enabled." "--enable-fission:Run the program with fission \(site isolation\) enabled." "--setpref:Set the specified pref before starting the program. Can be set multiple times. Prefs can also be set in \~/.mozbuild/machrc in the \[runprefs\] section - see \`./mach settings\` for more information." "--temp-profile:Run the program using a new temporary profile created inside the objdir." "--macos-open:On macOS, run the program using the open\(1\) command. Per open\(1\), the browser is launched \\\"just as if you had double-clicked the file\'s icon\\\". The browser can not be launched under a debugger with this option." "--debug:Enable the debugger. Not specifying a --debugger option will result in the default debugger being used." "--debugger:Name of debugger to use." "--debugger-args:Command-line arguments to pass to the debugger itself\; split as the Bourne shell would." "--dmd:Enable DMD. The following arguments have no effect without this." "--mode:Profiling mode. The default is \'dark-matter\'." "--stacks:Allocation stack trace coverage. The default is \'partial\'." "--show-dump-stats:Show stats when doing dumps.")
            ;;

            (run-condprofile)
            opts+=("--firefox:Firefox Binary" "--scenario:Scenario to use" "--profile:Existing profile Dir" "--customization:Profile customization to use" "--visible:Don\'t use headless mode" "--archives-dir:Archives local dir" "--force-new:Create from scratch" "--strict:Errors out immediatly on a scenario failure" "--geckodriver:Path to the geckodriver binary" "--device-name:Name of the device")
            ;;

            (settings)
            opts+=("-l:Show settings in a concise list" "--list:Show settings in a concise list")
            ;;

            (static-analysis autotest)
            opts+=("--verbose:Print verbose output." "-v:Print verbose output." "--dump-results:Generate the baseline for the regression test. Based on this baseline we will test future results." "-d:Generate the baseline for the regression test. Based on this baseline we will test future results." "--intree-tool:Use a pre-aquired in-tree clang-tidy package from the automation env. This option is only valid on automation environments." "-i:Use a pre-aquired in-tree clang-tidy package from the automation env. This option is only valid on automation environments.")
            ;;

            (static-analysis check)
            opts+=("--verbose:Print verbose output." "-v:Print verbose output." "--checks:Static analysis checks to enable.  By default, this enables only checks that are published here: https://mzl.la/2DRHeTh, but can be any clang-tidy checks syntax." "-c:Static analysis checks to enable.  By default, this enables only checks that are published here: https://mzl.la/2DRHeTh, but can be any clang-tidy checks syntax." "--jobs:Number of concurrent jobs to run. Default is the number of CPUs." "-j:Number of concurrent jobs to run. Default is the number of CPUs." "--strip:Strip NUM leading components from file names in diff mode." "-p:Strip NUM leading components from file names in diff mode." "--fix:Try to autofix errors detected by clang-tidy checkers." "-f:Try to autofix errors detected by clang-tidy checkers." "--header-filter:Regular expression matching the names of the headers to output diagnostics from. Diagnostics from the main file of each translation unit are always displayed" "-h-f:Regular expression matching the names of the headers to output diagnostics from. Diagnostics from the main file of each translation unit are always displayed" "--output:Write clang-tidy output in a file" "-o:Write clang-tidy output in a file" "--format:Output format to write in a file" "--outgoing:Run static analysis checks on outgoing files from mercurial repository")
            ;;

            (static-analysis check-coverity)
            opts+=("--verbose:Print verbose output." "-v:Print verbose output." "--output:Write coverity output translated to json output in a file" "-o:Write coverity output translated to json output in a file" "--coverity_output_path:Path where to write coverity results as cov-results.json. If no path is specified the default path from the coverity working directory, \~./mozbuild/coverity is used." "-co:Path where to write coverity results as cov-results.json. If no path is specified the default path from the coverity working directory, \~./mozbuild/coverity is used." "--outgoing:Run coverity on outgoing files from mercurial or git repository" "--full-build:Run a full build for coverity analisys.")
            ;;

            (static-analysis check-java)
            opts+=("--verbose:Print verbose output." "-v:Print verbose output." "--checks:Static analysis checks to enable." "-c:Static analysis checks to enable." "--jobs:Number of concurrent jobs to run. Default is the number of CPUs." "-j:Number of concurrent jobs to run. Default is the number of CPUs." "--task:Which gradle tasks to use to compile the java codebase." "-t:Which gradle tasks to use to compile the java codebase." "--outgoing:Run infer checks on outgoing files from repository" "--output:Write infer json output in a file")
            ;;

            (static-analysis check-syntax)
            opts+=("--verbose:Print verbose output." "-v:Print verbose output.")
            ;;

            (static-analysis clear-cache)
            opts+=("--verbose:Print verbose output." "-v:Print verbose output.")
            ;;

            (static-analysis install)
            opts+=("--verbose:Print verbose output." "-v:Print verbose output." "--skip-cache:Skip all local caches to force re-fetching the helper tool." "--force:Force re-install even though the tool exists in mozbuild." "--minimal-install:Download only clang based tool.")
            ;;

            (static-analysis print-checks)
            opts+=("--verbose:Print verbose output." "-v:Print verbose output.")
            ;;

            (talos-test)
            opts+=("-h:show this help message and exit" "--help:show this help message and exit" "-t:Title of the test run" "--title:Title of the test run" "--browserWait:Amount of time allowed for the browser to cleanly close" "-a:List of tests to run, separated by \':\' \(ex. damp:tart\)" "--activeTests:List of tests to run, separated by \':\' \(ex. damp:tart\)" "--suite:Suite to use \(instead of --activeTests\)" "--subtests:Name of the subtest\(s\) to run \(works only on DAMP\)" "--mainthread:Collect mainthread IO data from the browser by setting an environment variable" "--mozAfterPaint:wait for MozAfterPaint event before recording the time" "--firstPaint:Also report the first paint value in supported tests" "--useHero:use Hero elementtiming attribute to record the time" "--userReady:Also report the user ready value in supported tests" "--spsProfile:\(Deprecated - Use --gecko-profile instead.\) Profile the run and output the results in \$MOZ_UPLOAD_DIR." "--spsProfileInterval:\(Deprecated - Use --gecko-profile-interval instead.\) How frequently to take samples \(ms\)" "--spsProfileEntries:\(Deprecated - Use --gecko-profile-entries instead.\) How many samples to take with the profiler" "--gecko-profile:Profile the run and output the results in \$MOZ_UPLOAD_DIR. After talos is finished, profiler.firefox.com will be launched in Firefox so you can analyze the local profiles. To disable auto-launching of profiler.firefox.com set the DISABLE_PROFILE_LAUNCH=1 env var." "--gecko-profile-interval:How frequently to take samples \(ms\)" "--gecko-profile-entries:How many samples to take with the profiler" "--extension:Extension to install while running" "--fast:Run tp tests as tp_fast" "--symbolsPath:Path to the symbols for the build we are testing" "--xperf_path:Path to windows performance tool xperf.exe" "--test_timeout:Time to wait for the browser to output to the log file" "--errorFile:Filename to store the errors found during the test. Currently used for xperf only." "--setpref:Set a browser preference. May be used multiple times." "--firstNonBlankPaint:Wait for firstNonBlankPaint event before recording the time" "--pdfPaint:Wait for the first page of a PDF to be rendered" "--webServer:DEPRECATED" "--cycles:number of browser cycles to run" "--tpmanifest:manifest file to test" "--tpcycles:number of pageloader cycles to run" "--tptimeout:number of milliseconds to wait for a load event after calling loadURI before timing out" "--tppagecycles:number of pageloader cycles to run for each page in the manifest" "--no-download:Do not download the talos test pagesets" "--sourcestamp:Specify the hg revision or sourcestamp for the changeset we are testing.  This will use the value found in application.ini if it is not specified." "--repository:Specify the url for the repository we are testing. This will use the value found in application.ini if it is not specified." "--framework:Will post to the specified framework for Perfherder. Default \\\"talos\\\".  Used primarily for experiments on new platforms" "--print-tests:print available tests" "--print-suites:list available suites" "--no-upload-results:If given, it disables uploading of talos results." "--stylo-threads:If given, run Stylo with a certain number of threads" "--profile:Downloads a profile from TaskCluster and uses it" "--debug:Enable the debugger. Not specifying a --debugger option willresult in the default debugger being used." "--debugger:Name of debugger to use." "--debugger-args:Command-line arguments to pass to the debugger itself\; splitas the Bourne shell would." "--code-coverage:Remove any existing ccov gcda output files after browser initialization but before starting the tests. NOTE: Currently only supported in production." "--enable-webrender:Enable the WebRender compositor in Gecko." "--enable-fission:Enable Fission \(site isolation\) in Gecko." "--log-raw:Raw structured log messages \(provided by mozlog\)" "--log-unittest:Unittest style output \(provided by mozlog\)" "--log-xunit:xUnit compatible XML \(povided by mozlog\)" "--log-html:HTML report \(provided by mozlog\)" "--log-mach:Human-readable output \(provided by mozlog\)" "--log-tbpl:TBPL style log format \(provided by mozlog\)" "--log-grouped:Grouped summary of test results \(provided by mozlog\)" "--log-raw-level:A least log level to subscribe to for the given formatter \(debug, info, error, etc.\)" "--log-mach-verbose:Enables verbose mode for the given formatter." "--log-mach-level:A least log level to subscribe to for the given formatter \(debug, info, error, etc.\)" "--log-mach-buffer:If specified, enables message buffering at the given buffer size limit." "--log-mach-screenshot:Enable logging reftest-analyzer compatible screenshot data." "--log-mach-no-screenshot:Disable logging reftest-analyzer compatible screenshot data." "--log-tbpl-compact:Enables compact mode for the given formatter." "--log-tbpl-level:A least log level to subscribe to for the given formatter \(debug, info, error, etc.\)" "--log-tbpl-buffer:If specified, enables message buffering at the given buffer size limit.")
            ;;

            (taskcluster-build-image)
            opts+=("-t:tag that the image should be built as." "--tag:tag that the image should be built as." "--context-only:File name the context tarball should be written to.with this option it will only build the context.tar.")
            ;;

            (taskcluster-load-image)
            opts+=("--task-id:Load the image at public/image.tar.zst in this task, rather than searching the index" "-t:tag that the image should be loaded as. If not image will be loaded with tag from the tarball" "--tag:tag that the image should be loaded as. If not image will be loaded with tag from the tarball")
            ;;

            (taskgraph action-callback)
            opts+=("--root:root of the taskgraph definition relative to topsrcdir" "-r:root of the taskgraph definition relative to topsrcdir")
            ;;

            (taskgraph actions)
            opts+=("--root:root of the taskgraph definition relative to topsrcdir" "-r:root of the taskgraph definition relative to topsrcdir" "--quiet:suppress all logging output" "-q:suppress all logging output" "--verbose:include debug-level logging output" "-v:include debug-level logging output" "--parameters:parameters file \(.yml or .json\; see \`taskcluster/docs/parameters.rst\`\)\`" "-p:parameters file \(.yml or .json\; see \`taskcluster/docs/parameters.rst\`\)\`")
            ;;

            (taskgraph decision)
            opts+=("--root:root of the taskgraph definition relative to topsrcdir" "-r:root of the taskgraph definition relative to topsrcdir" "--base-repository:URL for \\\"base\\\" repository to clone" "--head-repository:URL for \\\"head\\\" repository to fetch revision from" "--head-ref:Reference \(this is same as rev usually for hg\)" "--head-rev:Commit revision to use from head repository" "--comm-base-repository:URL for \\\"base\\\" comm-\* repository to clone" "--comm-head-repository:URL for \\\"head\\\" comm-\* repository to fetch revision from" "--comm-head-ref:comm-\* Reference \(this is same as rev usually for hg\)" "--comm-head-rev:Commit revision to use from head comm-\* repository" "--project:Project to use for creating task graph. Example: --project=try" "--pushlog-id" "--pushdate" "--owner:email address of who owns this graph" "--level:SCM level of this repository" "--target-tasks-method:method for selecting the target tasks to generate" "--optimize-target-tasks:If specified, this indicates whether the target tasks are eligible for optimization. Otherwise, the default for the project is used." "--try-task-config-file:path to try task configuration file" "--tasks-for:the tasks_for value used to generate this task" "--include-push-tasks:Whether tasks from the on-push graph should be re-used in this graph. This allows cron graphs to avoid rebuilding jobs that were built on-push." "--rebuild-kind:Kinds that should not be re-used from the on-push graph.")
            ;;

            (taskgraph full)
            opts+=("-o:file path to store generated output." "--output-file:file path to store generated output." "-F:enable fast task generation for local debugging." "--fast:enable fast task generation for local debugging." "--target-kind:only return tasks that are of the given kind, or their dependencies." "--tasks-regex:only return tasks with labels matching this regular expression." "--tasks:only return tasks with labels matching this regular expression." "--no-optimize:do not remove tasks from the graph that are found in the index \(a.k.a. optimize the graph\)" "--parameters:parameters file \(.yml or .json\; see \`taskcluster/docs/parameters.rst\`\)\`" "-p:parameters file \(.yml or .json\; see \`taskcluster/docs/parameters.rst\`\)\`" "--labels:Output the label for each task in the task graph \(default\)" "-L:Output the label for each task in the task graph \(default\)" "--json:Output task graph as a JSON object" "-J:Output task graph as a JSON object" "--verbose:include debug-level logging output" "-v:include debug-level logging output" "--quiet:suppress all logging output" "-q:suppress all logging output" "--root:root of the taskgraph definition relative to topsrcdir" "-r:root of the taskgraph definition relative to topsrcdir")
            ;;

            (taskgraph morphed)
            opts+=("-o:file path to store generated output." "--output-file:file path to store generated output." "-F:enable fast task generation for local debugging." "--fast:enable fast task generation for local debugging." "--target-kind:only return tasks that are of the given kind, or their dependencies." "--tasks-regex:only return tasks with labels matching this regular expression." "--tasks:only return tasks with labels matching this regular expression." "--no-optimize:do not remove tasks from the graph that are found in the index \(a.k.a. optimize the graph\)" "--parameters:parameters file \(.yml or .json\; see \`taskcluster/docs/parameters.rst\`\)\`" "-p:parameters file \(.yml or .json\; see \`taskcluster/docs/parameters.rst\`\)\`" "--labels:Output the label for each task in the task graph \(default\)" "-L:Output the label for each task in the task graph \(default\)" "--json:Output task graph as a JSON object" "-J:Output task graph as a JSON object" "--verbose:include debug-level logging output" "-v:include debug-level logging output" "--quiet:suppress all logging output" "-q:suppress all logging output" "--root:root of the taskgraph definition relative to topsrcdir" "-r:root of the taskgraph definition relative to topsrcdir")
            ;;

            (taskgraph optimized)
            opts+=("-o:file path to store generated output." "--output-file:file path to store generated output." "-F:enable fast task generation for local debugging." "--fast:enable fast task generation for local debugging." "--target-kind:only return tasks that are of the given kind, or their dependencies." "--tasks-regex:only return tasks with labels matching this regular expression." "--tasks:only return tasks with labels matching this regular expression." "--no-optimize:do not remove tasks from the graph that are found in the index \(a.k.a. optimize the graph\)" "--parameters:parameters file \(.yml or .json\; see \`taskcluster/docs/parameters.rst\`\)\`" "-p:parameters file \(.yml or .json\; see \`taskcluster/docs/parameters.rst\`\)\`" "--labels:Output the label for each task in the task graph \(default\)" "-L:Output the label for each task in the task graph \(default\)" "--json:Output task graph as a JSON object" "-J:Output task graph as a JSON object" "--verbose:include debug-level logging output" "-v:include debug-level logging output" "--quiet:suppress all logging output" "-q:suppress all logging output" "--root:root of the taskgraph definition relative to topsrcdir" "-r:root of the taskgraph definition relative to topsrcdir")
            ;;

            (taskgraph target)
            opts+=("-o:file path to store generated output." "--output-file:file path to store generated output." "-F:enable fast task generation for local debugging." "--fast:enable fast task generation for local debugging." "--target-kind:only return tasks that are of the given kind, or their dependencies." "--tasks-regex:only return tasks with labels matching this regular expression." "--tasks:only return tasks with labels matching this regular expression." "--no-optimize:do not remove tasks from the graph that are found in the index \(a.k.a. optimize the graph\)" "--parameters:parameters file \(.yml or .json\; see \`taskcluster/docs/parameters.rst\`\)\`" "-p:parameters file \(.yml or .json\; see \`taskcluster/docs/parameters.rst\`\)\`" "--labels:Output the label for each task in the task graph \(default\)" "-L:Output the label for each task in the task graph \(default\)" "--json:Output task graph as a JSON object" "-J:Output task graph as a JSON object" "--verbose:include debug-level logging output" "-v:include debug-level logging output" "--quiet:suppress all logging output" "-q:suppress all logging output" "--root:root of the taskgraph definition relative to topsrcdir" "-r:root of the taskgraph definition relative to topsrcdir")
            ;;

            (taskgraph target-graph)
            opts+=("-o:file path to store generated output." "--output-file:file path to store generated output." "-F:enable fast task generation for local debugging." "--fast:enable fast task generation for local debugging." "--target-kind:only return tasks that are of the given kind, or their dependencies." "--tasks-regex:only return tasks with labels matching this regular expression." "--tasks:only return tasks with labels matching this regular expression." "--no-optimize:do not remove tasks from the graph that are found in the index \(a.k.a. optimize the graph\)" "--parameters:parameters file \(.yml or .json\; see \`taskcluster/docs/parameters.rst\`\)\`" "-p:parameters file \(.yml or .json\; see \`taskcluster/docs/parameters.rst\`\)\`" "--labels:Output the label for each task in the task graph \(default\)" "-L:Output the label for each task in the task graph \(default\)" "--json:Output task graph as a JSON object" "-J:Output task graph as a JSON object" "--verbose:include debug-level logging output" "-v:include debug-level logging output" "--quiet:suppress all logging output" "-q:suppress all logging output" "--root:root of the taskgraph definition relative to topsrcdir" "-r:root of the taskgraph definition relative to topsrcdir")
            ;;

            (taskgraph tasks)
            opts+=("-o:file path to store generated output." "--output-file:file path to store generated output." "-F:enable fast task generation for local debugging." "--fast:enable fast task generation for local debugging." "--target-kind:only return tasks that are of the given kind, or their dependencies." "--tasks-regex:only return tasks with labels matching this regular expression." "--tasks:only return tasks with labels matching this regular expression." "--no-optimize:do not remove tasks from the graph that are found in the index \(a.k.a. optimize the graph\)" "--parameters:parameters file \(.yml or .json\; see \`taskcluster/docs/parameters.rst\`\)\`" "-p:parameters file \(.yml or .json\; see \`taskcluster/docs/parameters.rst\`\)\`" "--labels:Output the label for each task in the task graph \(default\)" "-L:Output the label for each task in the task graph \(default\)" "--json:Output task graph as a JSON object" "-J:Output task graph as a JSON object" "--verbose:include debug-level logging output" "-v:include debug-level logging output" "--quiet:suppress all logging output" "-q:suppress all logging output" "--root:root of the taskgraph definition relative to topsrcdir" "-r:root of the taskgraph definition relative to topsrcdir")
            ;;

            (taskgraph test-action-callback)
            opts+=("--root:root of the taskgraph definition relative to topsrcdir" "-r:root of the taskgraph definition relative to topsrcdir" "--parameters:parameters file \(.yml or .json\; see \`taskcluster/docs/parameters.rst\`\)\`" "-p:parameters file \(.yml or .json\; see \`taskcluster/docs/parameters.rst\`\)\`" "--task-id:TaskId to which the action applies" "--task-group-id:TaskGroupId to which the action applies" "--input:Action input \(.yml or .json\)")
            ;;

            (telemetry-tests-client)
            opts+=("-h:show this help message and exit" "--help:show this help message and exit" "--binary:path to gecko executable to launch before running the test" "--address:host:port of running Gecko instance to connect to" "--emulator:If no --address is given, then the harness will launch an emulator. \(See Remote options group.\) If --address is given, then the harness assumes you are running an emulator already, and will launch gecko app on that emulator." "--app:application to use. see marionette_driver.geckoinstance" "--app-arg:specify a command line argument to be passed onto the application" "--profile:profile to use when launching the gecko process. If not passed, then a profile will be constructed and used" "--setpref:set a browser preference\; repeat for multiple preferences." "--preferences:read preferences from a JSON or INI file. For INI, use \'file.ini:section\' to specify a particular section." "--addon:addon to install\; repeat for multiple addons." "--repeat:number of times to repeat the test\(s\)" "--run-until-failure:Run tests repeatedly and stop on the first time a test fails. Default cap is 30 runs, which can be overwritten with the --repeat parameter." "--testvars:path to a json file with any test data required" "--symbols-path:absolute path to directory containing breakpad symbols, or the url of a zip file containing symbols" "--socket-timeout:Set the global timeout for marionette socket operations. Default: %\(default\)ss." "--startup-timeout:the max number of seconds to wait for a Marionette connection after launching a binary. Default: %\(default\)ss." "--shuffle:run tests in a random order" "--shuffle-seed:Use given seed to shuffle tests" "--total-chunks:how many chunks to split the tests up into" "--this-chunk:which chunk to run" "--server-root:url to a webserver or path to a document root from which content resources are served \(default: /home/padenot/src/trees/mozilla-unified/testing/marionette/harness/marionette_harness/www\)." "--gecko-log:Define the path to store log file. If the path is a directory, the real log file will be created given the format gecko-\(timestamp\).log. If it is a file, if will be used directly. \'-\' may be passed to write to stdout. Default: \'./gecko.log\'" "--logger-name:Define the name to associate with the logger used" "--jsdebugger:Enable the jsdebugger for marionette javascript." "--pydebugger:Enable python post-mortem debugger when a test fails. Pass in the debugger you want to use, eg pdb or ipdb." "--enable-fission:Enable Fission \(site isolation\) in Gecko." "--enable-webrender:Enable the WebRender compositor in Gecko." "-z:Run tests in headless mode." "--headless:Run tests in headless mode." "--tag:Filter out tests that don\'t have the given tag. Can be used multiple times in which case the test must contain at least one of the given tags." "--workspace:Path to directory for Marionette output. \(Default: .\) \(Default profile dest: TMP\)" "-v:Increase verbosity to include debug messages with -v, and trace messages with -vv." "--verbose:Increase verbosity to include debug messages with -v, and trace messages with -vv." "--emulator-binary:Path to emulator binary. By default mozrunner uses \`which emulator\`" "--adb:Path to the adb. By default mozrunner uses \`which adb\`" "--avd:Name of an AVD available in your environment.See mozrunner.FennecEmulatorRunner" "--avd-home:Path to avd parent directory" "--device:Serial ID to connect to as seen in \`adb devices\`,e.g emulator-5444" "--package:Name of Android package, e.g. org.mozilla.fennec" "--log-raw:Raw structured log messages \(provided by mozlog\)" "--log-unittest:Unittest style output \(provided by mozlog\)" "--log-xunit:xUnit compatible XML \(povided by mozlog\)" "--log-html:HTML report \(provided by mozlog\)" "--log-mach:Human-readable output \(provided by mozlog\)" "--log-tbpl:TBPL style log format \(provided by mozlog\)" "--log-grouped:Grouped summary of test results \(provided by mozlog\)" "--log-raw-level:A least log level to subscribe to for the given formatter \(debug, info, error, etc.\)" "--log-mach-verbose:Enables verbose mode for the given formatter." "--log-mach-level:A least log level to subscribe to for the given formatter \(debug, info, error, etc.\)" "--log-mach-buffer:If specified, enables message buffering at the given buffer size limit." "--log-mach-screenshot:Enable logging reftest-analyzer compatible screenshot data." "--log-mach-no-screenshot:Disable logging reftest-analyzer compatible screenshot data." "--log-tbpl-compact:Enables compact mode for the given formatter." "--log-tbpl-level:A least log level to subscribe to for the given formatter \(debug, info, error, etc.\)" "--log-tbpl-buffer:If specified, enables message buffering at the given buffer size limit.")
            ;;

            (test)
            opts+=("-h:show this help message and exit" "--help:show this help message and exit" "--debugger:Specify a debugger to use." "--log-raw:Raw structured log messages \(provided by mozlog\)" "--log-unittest:Unittest style output \(provided by mozlog\)" "--log-xunit:xUnit compatible XML \(povided by mozlog\)" "--log-html:HTML report \(provided by mozlog\)" "--log-mach:Human-readable output \(provided by mozlog\)" "--log-tbpl:TBPL style log format \(provided by mozlog\)" "--log-grouped:Grouped summary of test results \(provided by mozlog\)" "--log-raw-level:A least log level to subscribe to for the given formatter \(debug, info, error, etc.\)" "--log-mach-verbose:Enables verbose mode for the given formatter." "--log-mach-level:A least log level to subscribe to for the given formatter \(debug, info, error, etc.\)" "--log-mach-buffer:If specified, enables message buffering at the given buffer size limit." "--log-mach-screenshot:Enable logging reftest-analyzer compatible screenshot data." "--log-mach-no-screenshot:Disable logging reftest-analyzer compatible screenshot data." "--log-tbpl-compact:Enables compact mode for the given formatter." "--log-tbpl-level:A least log level to subscribe to for the given formatter \(debug, info, error, etc.\)" "--log-tbpl-buffer:If specified, enables message buffering at the given buffer size limit.")
            ;;

            (test-info long-tasks)
            opts+=("--branches:Report for named branches \(default: mozilla-central,autoland\)" "--start:Start date \(YYYY-MM-DD\)" "--end:End date \(YYYY-MM-DD\)" "--max-threshold-pct:Count tasks exceeding this percentage of max-run-time." "--filter-threshold-pct:Report tasks exceeding this percentage of long tasks." "--verbose:Enable debug logging.")
            ;;

            (test-info report)
            opts+=("--components:Comma-separated list of Bugzilla components. eg. Testing::General,Core::WebVR" "--flavor:Limit results to tests of the specified flavor \(eg. \\\"xpcshell\\\"\)." "--subsuite:Limit results to tests of the specified subsuite \(eg. \\\"devtools\\\"\)." "--show-manifests:Include test manifests in report." "--show-tests:Include individual tests in report." "--show-summary:Include summary in report." "--show-annotations:Include list of manifest annotation conditions in report." "--show-activedata:Include additional data from ActiveData, like run times and counts." "--filter-values:Comma-separated list of value regular expressions to filter on\; displayed tests contain all specified values." "--filter-keys:Comma-separated list of test keys to filter on, like \\\"skip-if\\\"\; only these fields will be searched for filter-values." "--no-component-report:Do not categorize by bugzilla component." "--output-file:Path to report file." "--branches:Query ActiveData for named branches \(default: mozilla-central,autoland\)" "--days:Query ActiveData for specified number of days" "--verbose:Enable debug logging.")
            ;;

            (test-info report-diff)
            opts+=("--before:The first \(earlier\) report file\; path to local file or url." "--after:The second \(later\) report file\; path to local file or url." "--output-file:Path to report file to be written. If not specified, reportwill be written to standard output." "--verbose:Enable debug logging.")
            ;;

            (test-info tests)
            opts+=("--branches:Report for named branches \(default: mozilla-central,autoland\)" "--start:Start date \(YYYY-MM-DD\)" "--end:End date \(YYYY-MM-DD\)" "--show-info:Retrieve and display general test information." "--show-results:Retrieve and display ActiveData test result summary." "--show-durations:Retrieve and display ActiveData test duration summary." "--show-tasks:Retrieve and display ActiveData test task names." "--show-bugs:Retrieve and display related Bugzilla bugs." "--verbose:Enable debug logging.")
            ;;

            (tps-build)
            opts+=("--dest:Where to write add-on.")
            ;;

            (try)
            opts+=("-h:show this help message and exit" "--help:show this help message and exit" "-m:Use the specified commit message, or create it in your \$EDITOR if blank. Defaults to computed message." "--message:Use the specified commit message, or create it in your \$EDITOR if blank. Defaults to computed message." "--no-push:Do not push to try as a result of running this command \(if specified this command will only print calculated try syntax and selection info\)." "--closed-tree:Push despite a closed try tree" "--save:Save selection for future use with --preset." "--preset:Load a saved selection." "--list-presets:List available preset selections." "--edit-presets:Edit the preset file.")
            ;;

            (try again)
            opts+=("-h:show this help message and exit" "--help:show this help message and exit" "--index:Index of entry in the history to re-push, where \'0\' is the most recent \(default 0\). Use --list to display indices." "--list:Display history and exit" "--list-tasks:Like --list, but display selected tasks  for each history entry, up to 10. Repeat to display all selected tasks." "--purge:Remove all history and exit" "-m:Use the specified commit message, or create it in your \$EDITOR if blank. Defaults to computed message." "--message:Use the specified commit message, or create it in your \$EDITOR if blank. Defaults to computed message." "--no-push:Do not push to try as a result of running this command \(if specified this command will only print calculated try syntax and selection info\)." "--closed-tree:Push despite a closed try tree")
            ;;

            (try auto)
            opts+=("-h:show this help message and exit" "--help:show this help message and exit" "--strategy:Override the default optimization strategy. Valid values are the experimental strategies defined at the bottom of \`taskcluster/taskgraph/optimize/__init__.py\`." "-m:Use the specified commit message, or create it in your \$EDITOR if blank. Defaults to computed message." "--message:Use the specified commit message, or create it in your \$EDITOR if blank. Defaults to computed message." "--no-push:Do not push to try as a result of running this command \(if specified this command will only print calculated try syntax and selection info\)." "--closed-tree:Push despite a closed try tree" "--artifact:Force artifact builds where possible." "--no-artifact:Disable artifact builds even if being used locally." "--env:Set an environment variable, of the form FOO=BAR. Can be passed in multiple times." "--chemspill-prio:Run at a higher priority than most try jobs \(chemspills only\)." "--disable-pgo:Don\'t run PGO builds" "--worker-override:Override the worker pool used for a given taskgraph worker alias. The argument should be \`\<alias\>=\<worker-pool\>\`. Can be specified multiple times." "--worker-suffix:Override the worker pool used for a given taskgraph worker alias, by appending a suffix to the work-pool. The argument should be \`\<alias\>=\<suffix\>\`. Can be specified multiple times.")
            ;;

            (try chooser)
            opts+=("-h:show this help message and exit" "--help:show this help message and exit" "-m:Use the specified commit message, or create it in your \$EDITOR if blank. Defaults to computed message." "--message:Use the specified commit message, or create it in your \$EDITOR if blank. Defaults to computed message." "--no-push:Do not push to try as a result of running this command \(if specified this command will only print calculated try syntax and selection info\)." "--closed-tree:Push despite a closed try tree" "--full:Use the full set of tasks as input to fzf \(instead of target tasks\)." "-p:Use the given parameters.yml to generate tasks, defaults to a default set of parameters" "--parameters:Use the given parameters.yml to generate tasks, defaults to a default set of parameters" "--artifact:Force artifact builds where possible." "--no-artifact:Disable artifact builds even if being used locally." "--browsertime:Use browsertime during Raptor tasks." "--chemspill-prio:Run at a higher priority than most try jobs \(chemspills only\)." "--disable-pgo:Don\'t run PGO builds" "--env:Set an environment variable, of the form FOO=BAR. Can be passed in multiple times." "--gecko-profile:Create and upload a gecko profile during talos/raptor tasks." "--pernosco:Opt-in to analysis by the Pernosco debugging service." "--no-pernosco:Opt-out of the Pernosco debugging service \(if you are on the whitelist\)." "--rebuild:Rebuild all selected tasks the specified number of times." "--worker-override:Override the worker pool used for a given taskgraph worker alias. The argument should be \`\<alias\>=\<worker-pool\>\`. Can be specified multiple times." "--worker-suffix:Override the worker pool used for a given taskgraph worker alias, by appending a suffix to the work-pool. The argument should be \`\<alias\>=\<suffix\>\`. Can be specified multiple times.")
            ;;

            (try empty)
            opts+=("-h:show this help message and exit" "--help:show this help message and exit" "-m:Use the specified commit message, or create it in your \$EDITOR if blank. Defaults to computed message." "--message:Use the specified commit message, or create it in your \$EDITOR if blank. Defaults to computed message." "--no-push:Do not push to try as a result of running this command \(if specified this command will only print calculated try syntax and selection info\)." "--closed-tree:Push despite a closed try tree")
            ;;

            (try fuzzy)
            opts+=("-h:show this help message and exit" "--help:show this help message and exit" "-q:Use the given query instead of entering the selection interface. Equivalent to typing \<query\>\<ctrl-a\>\<enter\> from the interface. Specifying multiple times schedules the union of computed tasks." "--query:Use the given query instead of entering the selection interface. Equivalent to typing \<query\>\<ctrl-a\>\<enter\> from the interface. Specifying multiple times schedules the union of computed tasks." "-i:Force running fzf interactively even when using presets or queries with -q/--query." "--interactive:Force running fzf interactively even when using presets or queries with -q/--query." "-x:When specifying queries on the command line with -q/--query, use the intersection of tasks rather than the union. This is especially useful for post filtering presets." "--and:When specifying queries on the command line with -q/--query, use the intersection of tasks rather than the union. This is especially useful for post filtering presets." "-e:Enable exact match mode. Terms will use an exact match by default, and terms prefixed with \' will become fuzzy." "--exact:Enable exact match mode. Terms will use an exact match by default, and terms prefixed with \' will become fuzzy." "-u:Update fzf before running." "--update:Update fzf before running." "-s:Show task duration estimates." "--show-estimates:Show task duration estimates." "--disable-target-task-filter:Some tasks run on mozilla-central but are filtered out of the default list due to resource constraints. This flag disables this filtering." "-m:Use the specified commit message, or create it in your \$EDITOR if blank. Defaults to computed message." "--message:Use the specified commit message, or create it in your \$EDITOR if blank. Defaults to computed message." "--no-push:Do not push to try as a result of running this command \(if specified this command will only print calculated try syntax and selection info\)." "--closed-tree:Push despite a closed try tree" "--full:Use the full set of tasks as input to fzf \(instead of target tasks\)." "-p:Use the given parameters.yml to generate tasks, defaults to a default set of parameters" "--parameters:Use the given parameters.yml to generate tasks, defaults to a default set of parameters" "--save:Save selection for future use with --preset." "--preset:Load a saved selection." "--list-presets:List available preset selections." "--edit-presets:Edit the preset file." "--artifact:Force artifact builds where possible." "--no-artifact:Disable artifact builds even if being used locally." "--browsertime:Use browsertime during Raptor tasks." "--chemspill-prio:Run at a higher priority than most try jobs \(chemspills only\)." "--disable-pgo:Don\'t run PGO builds" "--env:Set an environment variable, of the form FOO=BAR. Can be passed in multiple times." "--gecko-profile:Create and upload a gecko profile during talos/raptor tasks." "--pernosco:Opt-in to analysis by the Pernosco debugging service." "--no-pernosco:Opt-out of the Pernosco debugging service \(if you are on the whitelist\)." "--rebuild:Rebuild all selected tasks the specified number of times." "--route:Additional route to add to the tasks \(note: these will not be added to the decision task\)" "--worker-override:Override the worker pool used for a given taskgraph worker alias. The argument should be \`\<alias\>=\<worker-pool\>\`. Can be specified multiple times." "--worker-suffix:Override the worker pool used for a given taskgraph worker alias, by appending a suffix to the work-pool. The argument should be \`\<alias\>=\<suffix\>\`. Can be specified multiple times.")
            ;;

            (try release)
            opts+=("-h:show this help message and exit" "--help:show this help message and exit" "-v:The version number to use for the staging release." "--version:The version number to use for the staging release." "--migration:Migration to run for the release \(can be specified multiple times\)." "--no-limit-locales:Don\'t build a limited number of locales in the staging release." "--tasks:Which tasks to run on-push." "-m:Use the specified commit message, or create it in your \$EDITOR if blank. Defaults to computed message." "--message:Use the specified commit message, or create it in your \$EDITOR if blank. Defaults to computed message." "--no-push:Do not push to try as a result of running this command \(if specified this command will only print calculated try syntax and selection info\)." "--closed-tree:Push despite a closed try tree" "--disable-pgo:Don\'t run PGO builds" "--worker-override:Override the worker pool used for a given taskgraph worker alias. The argument should be \`\<alias\>=\<worker-pool\>\`. Can be specified multiple times." "--worker-suffix:Override the worker pool used for a given taskgraph worker alias, by appending a suffix to the work-pool. The argument should be \`\<alias\>=\<suffix\>\`. Can be specified multiple times.")
            ;;

            (try scriptworker)
            opts+=("-h:show this help message and exit" "--help:show this help message and exit" "--release-type:Release type to run" "-m:Use the specified commit message, or create it in your \$EDITOR if blank. Defaults to computed message." "--message:Use the specified commit message, or create it in your \$EDITOR if blank. Defaults to computed message." "--no-push:Do not push to try as a result of running this command \(if specified this command will only print calculated try syntax and selection info\)." "--closed-tree:Push despite a closed try tree" "--worker-override:Override the worker pool used for a given taskgraph worker alias. The argument should be \`\<alias\>=\<worker-pool\>\`. Can be specified multiple times." "--worker-suffix:Override the worker pool used for a given taskgraph worker alias, by appending a suffix to the work-pool. The argument should be \`\<alias\>=\<suffix\>\`. Can be specified multiple times." "--route:Additional route to add to the tasks \(note: these will not be added to the decision task\)")
            ;;

            (try syntax)
            opts+=("-h:show this help message and exit" "--help:show this help message and exit" "-b:Build types to run \(d for debug, o for optimized\)." "--build:Build types to run \(d for debug, o for optimized\)." "-p:Platforms to run \(required if not found in the environment as AUTOTRY_PLATFORM_HINT\)." "--platform:Platforms to run \(required if not found in the environment as AUTOTRY_PLATFORM_HINT\)." "-u:Test suites to run in their entirety." "--unittests:Test suites to run in their entirety." "-t:Talos suites to run." "--talos:Talos suites to run." "-j:Job tasks to run." "--jobs:Job tasks to run." "--tag:Restrict tests to the given tag \(may be specified multiple times\)." "--and:When -u and paths are supplied run only the intersection of the tests specified by the two arguments." "--no-artifact:Disable artifact builds even if --enable-artifact-builds is set in the mozconfig." "-v:Print detailed information about the resulting test selection and commands performed." "--verbose:Print detailed information about the resulting test selection and commands performed." "-m:Use the specified commit message, or create it in your \$EDITOR if blank. Defaults to computed message." "--message:Use the specified commit message, or create it in your \$EDITOR if blank. Defaults to computed message." "--no-push:Do not push to try as a result of running this command \(if specified this command will only print calculated try syntax and selection info\)." "--closed-tree:Push despite a closed try tree" "--save:Save selection for future use with --preset." "--preset:Load a saved selection." "--list-presets:List available preset selections." "--edit-presets:Edit the preset file." "--rebuild:Re-trigger all test jobs \(up to 20 times\)" "--rebuild-talos:Re-trigger all talos jobs" "--interactive:Allow ssh-like access to running test containers" "--no-retry:Do not retrigger failed tests" "--setenv:Set the corresponding variable in the test environment for applicable harnesses." "-f:Request failure emails only" "--failure-emails:Request failure emails only" "-e:Request all emails" "--all-emails:Request all emails" "--artifact:Force artifact builds where possible." "--upload-xdbs:Upload XDB compilation db files generated by hazard build")
            ;;

            (valgrind-test)
            opts+=("--suppressions:Specify a suppression file for Valgrind to use. Use --suppression multiple times to specify multiple suppression files.")
            ;;

            (vcs-setup)
            opts+=("-u:Only update recommended extensions, don\'t run the wizard." "--update-only:Only update recommended extensions, don\'t run the wizard.")
            ;;

            (vendor)
            opts+=("--check-for-update:For scripted use, prints the new commit to update to, or nothing if up to date." "--ignore-modified:Ignore modified files in current checkout" "-r:Repository tag or commit to update to." "--revision:Repository tag or commit to update to." "--verify:\(Only\) verify the manifest" "-v:\(Only\) verify the manifest")
            ;;

            (vendor python)
            opts+=("--with-windows-wheel:Vendor a wheel for Windows along with the source package" "--keep-extra-files:Keep all files, including tests and documentation.")
            ;;

            (vendor rust)
            opts+=("--ignore-modified:Ignore modified files in current checkout" "--build-peers-said-large-imports-were-ok:Permit overly-large files to be added to the repository. To get permission to set this, raise a question in the \#build channel at https://chat.mozilla.org.")
            ;;

            (warnings-list)
            opts+=("-C:Change to a subdirectory of the build directory first." "--directory:Change to a subdirectory of the build directory first." "--flags:Which warnings flags to match.")
            ;;

            (warnings-summary)
            opts+=("-C:Change to a subdirectory of the build directory first." "--directory:Change to a subdirectory of the build directory first.")
            ;;

            (watch)
            opts+=("-v:Verbose output for what commands the watcher is running." "--verbose:Verbose output for what commands the watcher is running.")
            ;;

            (web-platform-tests)
            opts+=("-h:show this help message and exit" "--help:show this help message and exit" "--manifest-update:Regenerate the test manifest." "--no-manifest-update:Prevent regeneration of the test manifest." "--manifest-download:Attempt to download a preexisting manifest when updating." "--no-manifest-download:Prevent download of the test manifest." "--timeout-multiplier:Multiplier relative to standard test timeout to use" "--run-by-dir:Split run into groups by directories. With a parameter,limit the depth of splits e.g. --run-by-dir=1 to split by top-leveldirectory" "--processes:Number of simultaneous processes to use" "--no-capture-stdio:Don\'t capture stdio and write to logging" "--no-fail-on-unexpected:Exit with status code 0 when test expectations are violated" "--list-test-groups:List the top level directories containing tests that will run." "--list-disabled:List the tests that are disabled on the current platform" "--list-tests:List all tests that will run" "--verify:Run a stability check on the selected tests" "--verify-log-full:Output per-iteration test results when running verify" "--verify-repeat-loop:Number of iterations for a run that reloads each test without restart." "--verify-repeat-restart:Number of iterations, for a run that restarts the runner between each iteration" "--verify-no-chaos-mode:Disable chaos mode when running on Firefox" "--verify-chaos-mode:Enable chaos mode when running on Firefox" "--verify-max-time:The maximum number of minutes for the job to run" "--verify-no-output-results:Prints individuals test results and messages" "--verify-output-results:Disable printing individuals test results and messages" "--test-types:Test types to run" "--include:URL prefix to include" "--exclude:URL prefix to exclude" "--include-manifest:Path to manifest listing tests to include" "--test-groups:Path to json file containing a mapping \{group_name: \[test_ids\]\}" "--skip-timeout:Skip tests that are expected to time out" "--skip-implementation-status:Skip tests that have the given implementation status" "--enable-quic:Enable tests that require QUIC server \(default: false\)" "--tag:Labels applied to tests to include in the run. Labels starting dir: are equivalent to top-level directories." "--default-exclude:Only run the tests explicitly given in arguments. No tests will run if the list is empty, and the program will exit with status code 0." "--debugger:run under a debugger, e.g. gdb or valgrind" "--debugger-args:arguments to the debugger" "--rerun:Number of times to re run each test without restarts" "--repeat:Number of times to run the tests, restarting between each run" "--repeat-until-unexpected:Run tests in a loop until one returns an unexpected result" "--pause-after-test:Halt the test runner after each test \(this happens by default if only a single test is run\)" "--no-pause-after-test:Don\'t halt the test runner irrespective of the number of tests run" "--pause-on-unexpected:Halt the test runner when an unexpected result is encountered" "--no-restart-on-unexpected:Don\'t restart on an unexpected result" "--symbols-path:Path or url to symbols file used to analyse crash minidumps." "--stackwalk-binary:Path to stackwalker program used to analyse minidumps." "--pdb:Drop into pdb on python exception" "--binary:Desktop binary to run tests against" "--binary-arg:Extra argument for the binary" "--webdriver-binary:WebDriver server binary to use" "--webdriver-arg:Extra argument for the WebDriver binary" "--package-name:Android package name to run tests against" "--device-serial:Running Android instance to connect to, if not emulator-5554" "--metadata:Path to root directory containing test metadata" "--tests:Path to root directory containing test files" "--manifest:Path to test manifest \(default is \$\{metadata_root\}/MANIFEST.json\)" "--run-info:Path to directory containing extra json files to add to run info" "--product:Browser against which to run tests" "--browser-version:Informative string detailing the browser release version. This is included in the run_info data." "--browser-channel:Informative string detailing the browser release channel. This is included in the run_info data." "--config:Path to config file" "--install-fonts:Install additional system fonts on your system" "--no-install-fonts:Do not install additional system fonts on your system" "--font-dir:Path to local font installation directory" "--headless:Run browser in headless mode" "--no-headless:Don\'t run browser in headless mode" "--instrument-to-file:Path to write instrumentation logs to" "--debug-build:Build is a debug build \(overrides any mozinfo file\)" "--release-build:Build is a release \(overrides any mozinfo file\)" "--total-chunks:Total number of chunks to use" "--this-chunk:Chunk number to run" "--chunk-type:Chunking type to use" "--ssl-type:Type of ssl support to enable \(running without ssl may lead to spurious errors\)" "--openssl-binary:Path to openssl binary" "--certutil-binary:Path to certutil binary for use with Firefox + ssl" "--ca-cert-path:Path to ca certificate when using pregenerated ssl certificates" "--host-key-path:Path to host private key when using pregenerated ssl certificates" "--host-cert-path:Path to host certificate when using pregenerated ssl certificates" "--prefs-root:Path to the folder containing browser prefs" "--preload-browser:Preload a gecko instance for faster restarts" "--no-preload-browser:Don\'t preload a gecko instance for faster restarts" "--disable-e10s:Run tests without electrolysis preferences" "--enable-webrender:Enable the WebRender compositor in Gecko \(defaults to disabled\)." "--no-enable-webrender:Disable the WebRender compositor in Gecko." "--enable-fission:Enable fission in Gecko \(defaults to disabled\)." "--no-enable-fission:Disable fission in Gecko." "--stackfix-dir:Path to directory containing assertion stack fixing scripts" "--specialpowers-path:Path to specialPowers extension xpi file" "--setpref:Defines an extra user preference \(overrides those in prefs_root\)" "--leak-check:Enable leak checking \(enabled by default for debug builds, silently ignored for opt, mobile\)" "--no-leak-check:Disable leak checking" "--stylo-threads:Number of parallel threads to use for stylo" "--reftest-internal:Enable reftest runner implemented inside Marionette" "--reftest-external:Disable reftest runner implemented inside Marionette" "--reftest-screenshot:With --reftest-internal, when to take a screenshot" "--chaos:Enable chaos mode with the specified feature flag \(see http://searchfox.org/mozilla-central/source/mfbt/ChaosMode.h for details\). If no value is supplied, all features are activated" "--user-stylesheet:Inject a user CSS stylesheet into every test." "--enable-mojojs:Enable MojoJS for testing. Note that this flag is usally enabled automatically by \`wpt run\`, if it succeeds in downloading the right version of mojojs.zip or if --mojojs-path is specified." "--mojojs-path:Path to mojojs gen/ directory. If it is not specified, \`wpt run\` will download and extract mojojs.zip into _venv2/mojojs/gen." "--sauce-browser:Sauce Labs browser name" "--sauce-platform:Sauce Labs OS platform" "--sauce-version:Sauce Labs browser version" "--sauce-build:Sauce Labs build identifier" "--sauce-tags:Sauce Labs identifying tag" "--sauce-tunnel-id:Sauce Connect tunnel identifier" "--sauce-user:Sauce Labs user name" "--sauce-key:Sauce Labs access key" "--sauce-connect-binary:Path to Sauce Connect binary" "--sauce-init-timeout:Number of seconds to wait for Sauce Connect tunnel to be available before aborting" "--sauce-connect-arg:Command-line argument to forward to the Sauce Connect binary \(repeatable\)" "--github-checks-text-file:Path to GitHub checks output file" "--webkit-port:WebKit port" "--log-raw:Raw structured log messages \(provided by mozlog\)" "--log-unittest:Unittest style output \(provided by mozlog\)" "--log-xunit:xUnit compatible XML \(povided by mozlog\)" "--log-html:HTML report \(provided by mozlog\)" "--log-mach:Human-readable output \(provided by mozlog\)" "--log-tbpl:TBPL style log format \(provided by mozlog\)" "--log-grouped:Grouped summary of test results \(provided by mozlog\)" "--log-chromium:Chromium Layout Tests format" "--log-wptreport:wptreport format" "--log-wptscreenshot:wpt.fyi screenshots" "--log-raw-level:A least log level to subscribe to for the given formatter \(debug, info, error, etc.\)" "--log-mach-verbose:Enables verbose mode for the given formatter." "--log-mach-level:A least log level to subscribe to for the given formatter \(debug, info, error, etc.\)" "--log-mach-buffer:If specified, enables message buffering at the given buffer size limit." "--log-mach-screenshot:Enable logging reftest-analyzer compatible screenshot data." "--log-mach-no-screenshot:Disable logging reftest-analyzer compatible screenshot data." "--log-tbpl-compact:Enables compact mode for the given formatter." "--log-tbpl-level:A least log level to subscribe to for the given formatter \(debug, info, error, etc.\)" "--log-tbpl-buffer:If specified, enables message buffering at the given buffer size limit." "--log-wptscreenshot-api:Cache API \(default: https://wpt.fyi/api/screenshots/hashes\)" "--no-install:Do not install test runner application")
            ;;

            (web-platform-tests-update)
            opts+=("-h:show this help message and exit" "--help:show this help message and exit" "--product:Browser for which metadata is being updated" "--config:Path to config file" "--metadata:Path to the folder containing test metadata" "--tests:Path to web-platform-tests" "--manifest:Path to test manifest \(default is \$\{metadata_root\}/MANIFEST.json\)" "--sync-path:Path to store git checkout of web-platform-tests during update" "--remote_url:URL of web-platfrom-tests repository to sync against" "--branch:Remote branch to sync against" "--rev:Revision to sync to" "--patch:Create a VCS commit containing the changes." "--no-patch:Don\'t create a VCS commit containing the changes." "--sync:Sync the tests with the latest from upstream \(implies --patch\)" "--full:For all tests that are updated, remove any existing conditions and missing subtests" "--disable-intermittent:Reason for disabling tests. When updating test results, disable tests that have inconsistent results across many runs with the given reason." "--update-intermittent:Update test metadata with expected intermittent statuses." "--remove-intermittent:Remove obsolete intermittent statuses from expected statuses." "--no-remove-obsolete:Don\'t remove metadata files that no longer correspond to a test file" "--no-store-state:Store state so that steps can be resumed after failure" "--continue:Continue a previously started run of the update script" "--abort:Clear state from a previous incomplete run of the update script" "--exclude:List of glob-style paths to exclude when syncing tests" "--include:List of glob-style paths to include which would otherwise be excluded when syncing tests" "--extra-property:Extra property from run_info.json to use in metadata update" "--log-raw:Raw structured log messages \(provided by mozlog\)" "--log-unittest:Unittest style output \(provided by mozlog\)" "--log-xunit:xUnit compatible XML \(povided by mozlog\)" "--log-html:HTML report \(provided by mozlog\)" "--log-mach:Human-readable output \(provided by mozlog\)" "--log-tbpl:TBPL style log format \(provided by mozlog\)" "--log-grouped:Grouped summary of test results \(provided by mozlog\)" "--log-chromium:Chromium Layout Tests format" "--log-wptreport:wptreport format" "--log-wptscreenshot:wpt.fyi screenshots" "--log-raw-level:A least log level to subscribe to for the given formatter \(debug, info, error, etc.\)" "--log-mach-verbose:Enables verbose mode for the given formatter." "--log-mach-level:A least log level to subscribe to for the given formatter \(debug, info, error, etc.\)" "--log-mach-buffer:If specified, enables message buffering at the given buffer size limit." "--log-mach-screenshot:Enable logging reftest-analyzer compatible screenshot data." "--log-mach-no-screenshot:Disable logging reftest-analyzer compatible screenshot data." "--log-tbpl-compact:Enables compact mode for the given formatter." "--log-tbpl-level:A least log level to subscribe to for the given formatter \(debug, info, error, etc.\)" "--log-tbpl-buffer:If specified, enables message buffering at the given buffer size limit." "--log-wptscreenshot-api:Cache API \(default: https://wpt.fyi/api/screenshots/hashes\)" "--upstream:Push local changes to upstream repository even when not syncing" "--no-upstream:Dont\'t push local changes to upstream repository when syncing" "--token-file:Path to file containing github token" "--token:GitHub token to use")
            ;;

            (wpt)
            opts+=("-h:show this help message and exit" "--help:show this help message and exit" "--manifest-update:Regenerate the test manifest." "--no-manifest-update:Prevent regeneration of the test manifest." "--manifest-download:Attempt to download a preexisting manifest when updating." "--no-manifest-download:Prevent download of the test manifest." "--timeout-multiplier:Multiplier relative to standard test timeout to use" "--run-by-dir:Split run into groups by directories. With a parameter,limit the depth of splits e.g. --run-by-dir=1 to split by top-leveldirectory" "--processes:Number of simultaneous processes to use" "--no-capture-stdio:Don\'t capture stdio and write to logging" "--no-fail-on-unexpected:Exit with status code 0 when test expectations are violated" "--list-test-groups:List the top level directories containing tests that will run." "--list-disabled:List the tests that are disabled on the current platform" "--list-tests:List all tests that will run" "--verify:Run a stability check on the selected tests" "--verify-log-full:Output per-iteration test results when running verify" "--verify-repeat-loop:Number of iterations for a run that reloads each test without restart." "--verify-repeat-restart:Number of iterations, for a run that restarts the runner between each iteration" "--verify-no-chaos-mode:Disable chaos mode when running on Firefox" "--verify-chaos-mode:Enable chaos mode when running on Firefox" "--verify-max-time:The maximum number of minutes for the job to run" "--verify-no-output-results:Prints individuals test results and messages" "--verify-output-results:Disable printing individuals test results and messages" "--test-types:Test types to run" "--include:URL prefix to include" "--exclude:URL prefix to exclude" "--include-manifest:Path to manifest listing tests to include" "--test-groups:Path to json file containing a mapping \{group_name: \[test_ids\]\}" "--skip-timeout:Skip tests that are expected to time out" "--skip-implementation-status:Skip tests that have the given implementation status" "--enable-quic:Enable tests that require QUIC server \(default: false\)" "--tag:Labels applied to tests to include in the run. Labels starting dir: are equivalent to top-level directories." "--default-exclude:Only run the tests explicitly given in arguments. No tests will run if the list is empty, and the program will exit with status code 0." "--debugger:run under a debugger, e.g. gdb or valgrind" "--debugger-args:arguments to the debugger" "--rerun:Number of times to re run each test without restarts" "--repeat:Number of times to run the tests, restarting between each run" "--repeat-until-unexpected:Run tests in a loop until one returns an unexpected result" "--pause-after-test:Halt the test runner after each test \(this happens by default if only a single test is run\)" "--no-pause-after-test:Don\'t halt the test runner irrespective of the number of tests run" "--pause-on-unexpected:Halt the test runner when an unexpected result is encountered" "--no-restart-on-unexpected:Don\'t restart on an unexpected result" "--symbols-path:Path or url to symbols file used to analyse crash minidumps." "--stackwalk-binary:Path to stackwalker program used to analyse minidumps." "--pdb:Drop into pdb on python exception" "--binary:Desktop binary to run tests against" "--binary-arg:Extra argument for the binary" "--webdriver-binary:WebDriver server binary to use" "--webdriver-arg:Extra argument for the WebDriver binary" "--package-name:Android package name to run tests against" "--device-serial:Running Android instance to connect to, if not emulator-5554" "--metadata:Path to root directory containing test metadata" "--tests:Path to root directory containing test files" "--manifest:Path to test manifest \(default is \$\{metadata_root\}/MANIFEST.json\)" "--run-info:Path to directory containing extra json files to add to run info" "--product:Browser against which to run tests" "--browser-version:Informative string detailing the browser release version. This is included in the run_info data." "--browser-channel:Informative string detailing the browser release channel. This is included in the run_info data." "--config:Path to config file" "--install-fonts:Install additional system fonts on your system" "--no-install-fonts:Do not install additional system fonts on your system" "--font-dir:Path to local font installation directory" "--headless:Run browser in headless mode" "--no-headless:Don\'t run browser in headless mode" "--instrument-to-file:Path to write instrumentation logs to" "--debug-build:Build is a debug build \(overrides any mozinfo file\)" "--release-build:Build is a release \(overrides any mozinfo file\)" "--total-chunks:Total number of chunks to use" "--this-chunk:Chunk number to run" "--chunk-type:Chunking type to use" "--ssl-type:Type of ssl support to enable \(running without ssl may lead to spurious errors\)" "--openssl-binary:Path to openssl binary" "--certutil-binary:Path to certutil binary for use with Firefox + ssl" "--ca-cert-path:Path to ca certificate when using pregenerated ssl certificates" "--host-key-path:Path to host private key when using pregenerated ssl certificates" "--host-cert-path:Path to host certificate when using pregenerated ssl certificates" "--prefs-root:Path to the folder containing browser prefs" "--preload-browser:Preload a gecko instance for faster restarts" "--no-preload-browser:Don\'t preload a gecko instance for faster restarts" "--disable-e10s:Run tests without electrolysis preferences" "--enable-webrender:Enable the WebRender compositor in Gecko \(defaults to disabled\)." "--no-enable-webrender:Disable the WebRender compositor in Gecko." "--enable-fission:Enable fission in Gecko \(defaults to disabled\)." "--no-enable-fission:Disable fission in Gecko." "--stackfix-dir:Path to directory containing assertion stack fixing scripts" "--specialpowers-path:Path to specialPowers extension xpi file" "--setpref:Defines an extra user preference \(overrides those in prefs_root\)" "--leak-check:Enable leak checking \(enabled by default for debug builds, silently ignored for opt, mobile\)" "--no-leak-check:Disable leak checking" "--stylo-threads:Number of parallel threads to use for stylo" "--reftest-internal:Enable reftest runner implemented inside Marionette" "--reftest-external:Disable reftest runner implemented inside Marionette" "--reftest-screenshot:With --reftest-internal, when to take a screenshot" "--chaos:Enable chaos mode with the specified feature flag \(see http://searchfox.org/mozilla-central/source/mfbt/ChaosMode.h for details\). If no value is supplied, all features are activated" "--user-stylesheet:Inject a user CSS stylesheet into every test." "--enable-mojojs:Enable MojoJS for testing. Note that this flag is usally enabled automatically by \`wpt run\`, if it succeeds in downloading the right version of mojojs.zip or if --mojojs-path is specified." "--mojojs-path:Path to mojojs gen/ directory. If it is not specified, \`wpt run\` will download and extract mojojs.zip into _venv2/mojojs/gen." "--sauce-browser:Sauce Labs browser name" "--sauce-platform:Sauce Labs OS platform" "--sauce-version:Sauce Labs browser version" "--sauce-build:Sauce Labs build identifier" "--sauce-tags:Sauce Labs identifying tag" "--sauce-tunnel-id:Sauce Connect tunnel identifier" "--sauce-user:Sauce Labs user name" "--sauce-key:Sauce Labs access key" "--sauce-connect-binary:Path to Sauce Connect binary" "--sauce-init-timeout:Number of seconds to wait for Sauce Connect tunnel to be available before aborting" "--sauce-connect-arg:Command-line argument to forward to the Sauce Connect binary \(repeatable\)" "--github-checks-text-file:Path to GitHub checks output file" "--webkit-port:WebKit port" "--log-raw:Raw structured log messages \(provided by mozlog\)" "--log-unittest:Unittest style output \(provided by mozlog\)" "--log-xunit:xUnit compatible XML \(povided by mozlog\)" "--log-html:HTML report \(provided by mozlog\)" "--log-mach:Human-readable output \(provided by mozlog\)" "--log-tbpl:TBPL style log format \(provided by mozlog\)" "--log-grouped:Grouped summary of test results \(provided by mozlog\)" "--log-chromium:Chromium Layout Tests format" "--log-wptreport:wptreport format" "--log-wptscreenshot:wpt.fyi screenshots" "--log-raw-level:A least log level to subscribe to for the given formatter \(debug, info, error, etc.\)" "--log-mach-verbose:Enables verbose mode for the given formatter." "--log-mach-level:A least log level to subscribe to for the given formatter \(debug, info, error, etc.\)" "--log-mach-buffer:If specified, enables message buffering at the given buffer size limit." "--log-mach-screenshot:Enable logging reftest-analyzer compatible screenshot data." "--log-mach-no-screenshot:Disable logging reftest-analyzer compatible screenshot data." "--log-tbpl-compact:Enables compact mode for the given formatter." "--log-tbpl-level:A least log level to subscribe to for the given formatter \(debug, info, error, etc.\)" "--log-tbpl-buffer:If specified, enables message buffering at the given buffer size limit." "--log-wptscreenshot-api:Cache API \(default: https://wpt.fyi/api/screenshots/hashes\)" "--no-install:Do not install test runner application")
            ;;

            (wpt-manifest-update)
            opts+=("-h:show this help message and exit" "--help:show this help message and exit" "--rebuild:Rebuild manifest from scratch" "--download:Always download even if the local manifest is recent" "--no-download:Don\'t try to download the manifest" "--no-update:Just download the manifest, don\'t update" "--config:Path to wptrunner config file" "--rewrite-config:Force the local configuration to be regenerated" "--cache-root:Path to use for the metadata cache" "--log-raw:Raw structured log messages \(provided by mozlog\)" "--log-unittest:Unittest style output \(provided by mozlog\)" "--log-xunit:xUnit compatible XML \(povided by mozlog\)" "--log-html:HTML report \(provided by mozlog\)" "--log-mach:Human-readable output \(provided by mozlog\)" "--log-tbpl:TBPL style log format \(provided by mozlog\)" "--log-grouped:Grouped summary of test results \(provided by mozlog\)" "--log-chromium:Chromium Layout Tests format" "--log-wptreport:wptreport format" "--log-wptscreenshot:wpt.fyi screenshots" "--log-raw-level:A least log level to subscribe to for the given formatter \(debug, info, error, etc.\)" "--log-mach-verbose:Enables verbose mode for the given formatter." "--log-mach-level:A least log level to subscribe to for the given formatter \(debug, info, error, etc.\)" "--log-mach-buffer:If specified, enables message buffering at the given buffer size limit." "--log-mach-screenshot:Enable logging reftest-analyzer compatible screenshot data." "--log-mach-no-screenshot:Disable logging reftest-analyzer compatible screenshot data." "--log-tbpl-compact:Enables compact mode for the given formatter." "--log-tbpl-level:A least log level to subscribe to for the given formatter \(debug, info, error, etc.\)" "--log-tbpl-buffer:If specified, enables message buffering at the given buffer size limit." "--log-wptscreenshot-api:Cache API \(default: https://wpt.fyi/api/screenshots/hashes\)")
            ;;

            (wpt-metadata-merge)
            opts+=("-h:show this help message and exit" "--help:show this help message and exit")
            ;;

            (wpt-serve)
            opts+=("-h:show this help message and exit" "--help:show this help message and exit" "--latency:Artificial latency to add before sending http responses, in ms" "--config:Path to external config file" "--doc_root:Path to document root. Overrides config." "--ws_doc_root:Path to WebSockets document root. Overrides config." "--alias_file:File with entries for aliases/multiple doc roots. In form of \`/ALIAS_NAME/, DOC_ROOT\\n\`" "--no-h2:Disable the HTTP/2.0 server" "--quic-transport:Enable QUIC server for WebTransport" "--exit-after-start:Exit after starting servers")
            ;;

            (wpt-test-paths)
            opts+=("-h:show this help message and exit" "--help:show this help message and exit" "--no-update:Don\'t update manifest before continuing" "-r:Force a full rebuild of the manifest." "--rebuild:Force a full rebuild of the manifest." "--cache-root:Path in which to store any caches \(default \<tests_root\>/.wptcache/\)" "--json:Output as JSON")
            ;;

            (wpt-update)
            opts+=("-h:show this help message and exit" "--help:show this help message and exit" "--product:Browser for which metadata is being updated" "--config:Path to config file" "--metadata:Path to the folder containing test metadata" "--tests:Path to web-platform-tests" "--manifest:Path to test manifest \(default is \$\{metadata_root\}/MANIFEST.json\)" "--sync-path:Path to store git checkout of web-platform-tests during update" "--remote_url:URL of web-platfrom-tests repository to sync against" "--branch:Remote branch to sync against" "--rev:Revision to sync to" "--patch:Create a VCS commit containing the changes." "--no-patch:Don\'t create a VCS commit containing the changes." "--sync:Sync the tests with the latest from upstream \(implies --patch\)" "--full:For all tests that are updated, remove any existing conditions and missing subtests" "--disable-intermittent:Reason for disabling tests. When updating test results, disable tests that have inconsistent results across many runs with the given reason." "--update-intermittent:Update test metadata with expected intermittent statuses." "--remove-intermittent:Remove obsolete intermittent statuses from expected statuses." "--no-remove-obsolete:Don\'t remove metadata files that no longer correspond to a test file" "--no-store-state:Store state so that steps can be resumed after failure" "--continue:Continue a previously started run of the update script" "--abort:Clear state from a previous incomplete run of the update script" "--exclude:List of glob-style paths to exclude when syncing tests" "--include:List of glob-style paths to include which would otherwise be excluded when syncing tests" "--extra-property:Extra property from run_info.json to use in metadata update" "--log-raw:Raw structured log messages \(provided by mozlog\)" "--log-unittest:Unittest style output \(provided by mozlog\)" "--log-xunit:xUnit compatible XML \(povided by mozlog\)" "--log-html:HTML report \(provided by mozlog\)" "--log-mach:Human-readable output \(provided by mozlog\)" "--log-tbpl:TBPL style log format \(provided by mozlog\)" "--log-grouped:Grouped summary of test results \(provided by mozlog\)" "--log-chromium:Chromium Layout Tests format" "--log-wptreport:wptreport format" "--log-wptscreenshot:wpt.fyi screenshots" "--log-raw-level:A least log level to subscribe to for the given formatter \(debug, info, error, etc.\)" "--log-mach-verbose:Enables verbose mode for the given formatter." "--log-mach-level:A least log level to subscribe to for the given formatter \(debug, info, error, etc.\)" "--log-mach-buffer:If specified, enables message buffering at the given buffer size limit." "--log-mach-screenshot:Enable logging reftest-analyzer compatible screenshot data." "--log-mach-no-screenshot:Disable logging reftest-analyzer compatible screenshot data." "--log-tbpl-compact:Enables compact mode for the given formatter." "--log-tbpl-level:A least log level to subscribe to for the given formatter \(debug, info, error, etc.\)" "--log-tbpl-buffer:If specified, enables message buffering at the given buffer size limit." "--log-wptscreenshot-api:Cache API \(default: https://wpt.fyi/api/screenshots/hashes\)" "--upstream:Push local changes to upstream repository even when not syncing" "--no-upstream:Dont\'t push local changes to upstream repository when syncing" "--token-file:Path to file containing github token" "--token:GitHub token to use")
            ;;

            (xpcshell-test)
            opts+=("-h:show this help message and exit" "--help:show this help message and exit" "--app-path:application directory \(as opposed to XRE directory\)" "--interactive:don\'t automatically run tests, drop to an xpcshell prompt" "--verbose:always print stdout and stderr from tests" "--verbose-if-fails:Output the log if a test fails, even when run in parallel" "--keep-going:continue running tests after test killed with control-C \(SIGINT\)" "--logfiles:create log files \(default, only used to override --no-logfiles\)" "--dump-tests:Specify path to a filename to dump all the tests that will be run" "--manifest:Manifest of test directories to use" "--no-logfiles:don\'t create log files" "--sequential:Run all tests sequentially" "--temp-dir:Directory to use for temporary files" "--testing-modules-dir:Directory where testing modules are located." "--test-plugin-path:Path to the location of a plugins directory containing the test plugin or plugins required for tests. By default xpcshell\'s dir svc provider returns gre/plugins. Use test-plugin-path to add a directory to return for NS_APP_PLUGINS_DIR_LIST when queried." "--total-chunks:how many chunks to split the tests up into" "--this-chunk:which chunk to run between 1 and --total-chunks" "--profile-name:name of application profile being tested" "--build-info-json:path to a mozinfo.json including information about the build configuration. defaults to looking for mozinfo.json next to the script." "--shuffle:Execute tests in random order" "--xre-path:absolute path to directory containing XRE \(probably xulrunner\)" "--symbols-path:absolute path to directory containing breakpad symbols, or the URL of a zip file containing symbols" "--jscov-dir-prefix:Directory to store per-test javascript line coverage data as json." "--debugger:use the given debugger to launch the application" "--debugger-args:pass the given args to the debugger _before_ the application on the command line" "--debugger-interactive:prevents the test harness from redirecting stdout and stderr for interactive debuggers" "--jsdebugger:Waits for a devtools JS debugger to connect before starting the test." "--jsdebugger-port:The port to listen on for a debugger connection if --jsdebugger is specified." "--tag:filter out tests that don\'t have the given tag. Can be used multiple times in which case the test must contain at least one of the given tags." "--utility-path:Path to a directory containing utility programs, such as stack fixer scripts." "--xpcshell:Path to xpcshell binary" "--http3server:Path to http3server binary" "--rerun-failures:Rerun failures from the previous run, if any" "--failure-manifest:Path to a manifest file from which to rerun failures \(with --rerun-failure\) or in which to record failed tests" "--threads:override the number of jobs \(threads\) when running tests in parallel, the default is CPU x 1.5 when running via mach and CPU x 4 when running in automation" "--setpref:Defines an extra user preference \(can be passed multiple times." "--verify:Run tests in verification mode: Run many times in different ways, to see if there are intermittent failures." "--verify-max-time:Maximum time, in seconds, to run in --verify mode." "--enable-webrender:Enable the WebRender compositor in Gecko." "--headless:Enable headless mode by default for tests which don\'t specify whether to use headless mode" "--self-test:Run self tests" "--log-raw:Raw structured log messages \(provided by mozlog\)" "--log-unittest:Unittest style output \(provided by mozlog\)" "--log-xunit:xUnit compatible XML \(povided by mozlog\)" "--log-html:HTML report \(provided by mozlog\)" "--log-mach:Human-readable output \(provided by mozlog\)" "--log-tbpl:TBPL style log format \(provided by mozlog\)" "--log-grouped:Grouped summary of test results \(provided by mozlog\)" "--log-chromium:Chromium Layout Tests format" "--log-wptreport:wptreport format" "--log-wptscreenshot:wpt.fyi screenshots" "--log-raw-level:A least log level to subscribe to for the given formatter \(debug, info, error, etc.\)" "--log-mach-verbose:Enables verbose mode for the given formatter." "--log-mach-level:A least log level to subscribe to for the given formatter \(debug, info, error, etc.\)" "--log-mach-buffer:If specified, enables message buffering at the given buffer size limit." "--log-mach-screenshot:Enable logging reftest-analyzer compatible screenshot data." "--log-mach-no-screenshot:Disable logging reftest-analyzer compatible screenshot data." "--log-tbpl-compact:Enables compact mode for the given formatter." "--log-tbpl-level:A least log level to subscribe to for the given formatter \(debug, info, error, etc.\)" "--log-tbpl-buffer:If specified, enables message buffering at the given buffer size limit." "--log-wptscreenshot-api:Cache API \(default: https://wpt.fyi/api/screenshots/hashes\)")
            ;;

            esac
            _describe 'option' opts
        ;;
        *)
            if [[ -z $sub ]]; then
                # if we're completing a command with subcommands, add them here
                case "$com" in
            (android)
            subs+=("api-lint:Run Android api-lint.\
REMOVED/DEPRECATED: Use \'mach lint --linter android-api-lint\'." "archive-geckoview:Create GeckoView archives.\
        See http://firefox-source-docs.mozilla.org/build/buildsystem/toolchains.html\#firefox-for-android-with-gradle" "assemble-app:Assemble Firefox for Android.\
        See http://firefox-source-docs.mozilla.org/build/buildsystem/toolchains.html\#firefox-for-android-with-gradle" "build-geckoview_example:Build geckoview_example " "checkstyle:Run Android checkstyle.\
REMOVED/DEPRECATED: Use \'mach lint --linter android-checkstyle\'." "geckoview-docs:Create GeckoView javadoc and optionally upload to Github" "generate-generated-jni-wrappers:Generate GeckoView JNI wrappers used when building GeckoView." "generate-sdk-bindings:Generate SDK bindings used when building GeckoView." "gradle-dependencies:Collect Android Gradle dependencies.\
        See http://firefox-source-docs.mozilla.org/build/buildsystem/toolchains.html\#firefox-for-android-with-gradle" "install-geckoview_example:Install geckoview_example " "lint:Run Android lint.\
REMOVED/DEPRECATED: Use \'mach lint --linter android-lint\'." "test:Run Android test.\
REMOVED/DEPRECATED: Use \'mach lint --linter android-test\'.")
            ;;

            (artifact)
            subs+=("clear-cache:Delete local artifacts and reset local artifact cache." "install:Install a good pre-built artifact." "toolchain")
            ;;

            (busted)
            subs+=("file:File a bug for busted tooling.")
            ;;

            (cargo)
            subs+=("check:Run \`cargo check\` on a given crate.  Defaults to gkrust.")
            ;;

            (doc)
            subs+=("mach-telemetry:Generate documentation from Glean metrics.yaml files")
            ;;

            (file-info)
            subs+=("bugzilla-automation:Perform Bugzilla metadata analysis as required for automation" "bugzilla-component:Show Bugzilla component info for files listed." "missing-bugzilla:Show files missing Bugzilla component info" "schedules:Show the combined SCHEDULES for the files listed.")
            ;;

            (hazards)
            subs+=("analyze:Analyzed gathered data for rooting hazards" "bootstrap:Install prerequisites for the hazard analysis" "build-shell:Build a shell for the hazard analysis" "compile:==SUPPRESS==" "gather:Gather analysis data by compiling the given application")
            ;;

            (logspam)
            subs+=("bisect" "file" "report")
            ;;

            (mach-completion)
            subs+=("bash:Print mach completion script for bash shell" "fish:Print mach completion script for fish shell" "zsh:Print mach completion script for zsh shell")
            ;;

            (release)
            subs+=("buglist:Generate list of bugs since the last release." "push-scriptworker-canary:Push tasks to try, to test new scriptworker deployments." "send-buglist-email:Send an email with the bugs since the last release.")
            ;;

            (remote)
            subs+=("vendor-puppeteer:Pull in latest changes of the Puppeteer client.")
            ;;

            (repackage)
            subs+=("dmg:Repackage a tar file into a .dmg for OSX" "installer:Repackage into a Windows installer exe" "mar:Repackage into complete MAR file" "msi:Repackage into a MSI")
            ;;

            (static-analysis)
            subs+=("autotest:Run the auto-test suite in order to determine that the analysis did not regress." "check:Run the checks using the helper tool" "check-coverity:Run coverity static-analysis tool on the given files. Can only be run by automation! It\'s result is stored as an json file on the artifacts server." "check-java:Run infer on the java codebase." "check-syntax:Run the check-syntax for C/C++ files based on \`compile_commands.json\`" "clear-cache:Delete local helpers and reset static analysis helper tool cache" "install:Install the static analysis helper tool" "print-checks:Print a list of the static analysis checks performed by default")
            ;;

            (taskgraph)
            subs+=("action-callback:Run action callback used by action tasks" "actions:Write actions.json to stdout" "cron:Provide a pointer to the new \`.cron.yml\` handler." "decision:Run the decision task" "full:Show the full taskgraph" "morphed:Show the morphed taskgraph" "optimized:Show the optimized taskgraph" "target:Show the target task set" "target-graph:Show the target taskgraph" "tasks:Show all tasks in the taskgraph" "test-action-callback:Run an action callback in a testing mode")
            ;;

            (test-info)
            subs+=("long-tasks:Find tasks approaching their taskcluster max-run-time." "report:Generate a json report of test manifests and/or tests categorized by Bugzilla component and optionally filtered by path, component, and/or manifest annotations." "report-diff:Compare two reports generated by \\\"test-info reports\\\"." "tests:Display historical test result summary for named tests.")
            ;;

            (try)
            subs+=("again:Schedule a previously generated \(non try syntax\) push again." "auto:Automatically determine which tasks to run. This runs the same set of tasks that would be run on autoland. This selector is EXPERIMENTAL." "chooser:Schedule tasks by selecting them from a web interface." "coverage:Select tasks on try using coverage data" "empty:Push to try without scheduling any tasks." "fuzzy:Select tasks on try using a fuzzy finder" "release:Push the current tree to try, configured for a staging release." "scriptworker:Run scriptworker tasks against a recent release." "syntax:Select tasks on try using try syntax")
            ;;

            (vendor)
            subs+=("python:Vendor Python packages from pypi.org into third_party/python. Some extra files like docs and tests will automatically be excluded." "rust:Vendor rust crates from crates.io into third_party/rust")
            ;;

                esac
                _describe 'subcommand' subs
            fi
            # also fallback to file completion
            _arguments '*:file:_files'
    esac
}
_mach_complete "$@"
compdef _mach_complete mach

